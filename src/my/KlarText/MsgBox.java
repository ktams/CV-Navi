/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package my.KlarText;

import java.awt.Component;
import java.awt.Font;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JDialog;
import javax.swing.Timer;

/**
 *
 * @author Lothar
 */
public class MsgBox extends JDialog {
    /**
     * set an optional countdown timeout for the messsage box
     */
    private long timeoutMsec;
    private long countdownAnzeigeSec;
    private long timeoutEndeMsec;
    private Timer timer;

    /**
     * Creates new form MsgBox
     */
    public MsgBox(Frame parent, boolean modal, Component comp) {
        super(parent, modal);
        this.timer = null;
        this.countdownAnzeigeSec = 0;
        this.timeoutMsec = 0;
        initComponents();
        pack();
        if( comp != null ) {
            setLocationRelativeTo(comp);
        } else {
            if( parent != null ) {
                setLocationRelativeTo(parent);
            } else {
                setLocationRelativeTo(null);
            }
        }
    }

    /**
     * set an optional countdown for the messsage box
     * @param seconds counter value (default 0 = countdown off)
     */
    public void setCountdown( long seconds ) {
        timeoutMsec = seconds*1000;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButtonOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CV-Navi - Information");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Text1");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Text2");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Text3");

        jButtonOK.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                    .addComponent(jButtonOK, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jButtonOK)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        if( timer != null ) {
            timer.stop();
            System.out.print("\r                                        \r");
        }
        timeoutMsec = 0;
        dispose();
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // ab hier nur noch timeout / countdown
        if( timeoutMsec == 0 ) {
            return;
        }
        timeoutEndeMsec = System.currentTimeMillis() + timeoutMsec;
        countdownAnzeigeSec = timeoutEndeMsec / 1000;
        System.out.println("OK with "+timeoutMsec/1000+" seconds countdown");

        jButtonOK.setFont(jButtonOK.getFont().deriveFont(Font.BOLD));

        final ActionListener actionListener;
        actionListener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                if( timeoutEndeMsec > 0 ){
                    long tCurr = System.currentTimeMillis();
                    if( tCurr > timeoutEndeMsec ) {
                        System.out.print("\r                                        \r");
                        // countdown reached 0
                        timeoutEndeMsec = 0;
                        timeoutMsec = 0;
                        if( timer != null )
                            timer.stop();
                        dispose();
                    } else {
                        long tRest = (timeoutEndeMsec-tCurr)/1000 ;
                        if( countdownAnzeigeSec > tRest ) {
                            countdownAnzeigeSec = tRest ;
                            String str = "OK ( " + (tRest+1) + " )";
                            jButtonOK.setText(str);
                            System.out.print("\rOK-countdown string["+str+"] " );
                        }
                    }
                }
            }
        };

        // invoke actionLlistener every 100 ms
        timer = new Timer(100, actionListener);
        timer.start();
    }//GEN-LAST:event_formWindowOpened

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonOK;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
