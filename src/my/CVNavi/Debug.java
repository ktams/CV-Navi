/*
 * Debug.java
 *
 * Created on 14.04.2021
 *
 * @author Kersten Tams Copyright 2009-2021
 * @author Lothar Roth  Copyright 2012-2021
 *
 */

package my.CVNavi;

import java.nio.file.FileSystems;
import java.nio.file.Path;
import java.util.Properties;
import java.util.ResourceBundle;
import static my.CVNavi.CVNavi.debug2file;
import static my.CVNavi.CVNavi.debugFileName;
import static my.CVNavi.CVNavi.debugLevel;

/**
 *
 * @author ktams
 */
public class Debug extends javax.swing.JFrame {

    public CVNavi CVNavi;
    private ResourceBundle bundle;

    /** Creates new form Options
     * @param cvnaviThis */
    public Debug(CVNavi cvnaviThis) {
        if( cvnaviThis == null ) {
            return;
        }
        CVNavi = cvnaviThis;
        if( CVNavi.frameInstanceDEBUG != null ) {
            CVNavi.frameInstanceDEBUG.toFront();
            CVNavi.frameInstanceDEBUG.repaint();
            return;
        }
        CVNavi.frameInstanceDEBUG = this;

        initComponents();
        bundle = java.util.ResourceBundle.getBundle("my.CVNavi/Bundle");

        jDebugSlider.setValue(debugLevel);
        jDebugSlider.setMajorTickSpacing(1);
        jDebugSlider.setPaintLabels(true);
        // jDebugSlider.setPaintTicks(true);
        //this.setTitle("Debug Options");
        this.setTitle(bundle.getString("Debug.jPanelDebug.border.title"));
        jTextDebugFileName.setText(debugFileName);
        jCheckBoxDebugWriteActive.setSelected(debug2file);
        jTextDebugFileName.setEnabled(! debug2file);
        Path fullPath = FileSystems.getDefault().getPath(debugFileName).toAbsolutePath();
        jLabelFullDebugFileName.setText(fullPath.toString());
        this.pack();


        setLocationRelativeTo(cvnaviThis);
        setVisible(true);
    }

    private void checkSliderPos() {
        int slPos = jDebugSlider.getValue();
        if( slPos != debugLevel ) {
            System.out.println("debugLevel changed from["+debugLevel+"] to ["+slPos+"]");
            debugLevel = slPos;
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelDebug = new javax.swing.JPanel();
        jButtonSaveAndClose = new javax.swing.JButton();
        jButtonAbbrechen = new javax.swing.JButton();
        jDebugSlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jTextDebugFileName = new javax.swing.JTextField();
        jLabelDebugFileName = new javax.swing.JLabel();
        jCheckBoxDebugWriteActive = new javax.swing.JCheckBox();
        jLabelFullDebugFileName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("my/CVNavi/Bundle"); // NOI18N
        jPanelDebug.setBorder(javax.swing.BorderFactory.createTitledBorder(null, bundle.getString("Debug.jPanelDebug.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jPanelDebug.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jButtonSaveAndClose.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonSaveAndClose.setText(bundle.getString("Debug.jButtonSaveAndClose.text")); // NOI18N
        jButtonSaveAndClose.setToolTipText(bundle.getString("Debug.jButtonSaveAndClose.toolTipText")); // NOI18N
        jButtonSaveAndClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveAndCloseActionPerformed(evt);
            }
        });

        jButtonAbbrechen.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonAbbrechen.setText(bundle.getString("Debug.jButtonAbbrechen.text")); // NOI18N
        jButtonAbbrechen.setToolTipText(bundle.getString("Debug.jButtonAbbrechen.toolTipText")); // NOI18N
        jButtonAbbrechen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAbbrechenActionPerformed(evt);
            }
        });

        jDebugSlider.setMaximum(10);
        jDebugSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jDebugSliderStateChanged(evt);
            }
        });
        jDebugSlider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jDebugSliderMouseDragged(evt);
            }
        });
        jDebugSlider.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jDebugSliderMouseWheelMoved(evt);
            }
        });
        jDebugSlider.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                jDebugSliderCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        jLabel1.setText(bundle.getString("Debug.jLabel1.text")); // NOI18N

        jTextDebugFileName.setText(bundle.getString("Debug.jTextDebugFileName.text")); // NOI18N
        jTextDebugFileName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextDebugFileNameFocusLost(evt);
            }
        });

        jLabelDebugFileName.setText(bundle.getString("Debug.jLabelDebugFileName.text")); // NOI18N

        jCheckBoxDebugWriteActive.setText(bundle.getString("Debug.jCheckBoxDebugWriteActive.text")); // NOI18N
        jCheckBoxDebugWriteActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDebugWriteActiveActionPerformed(evt);
            }
        });

        jLabelFullDebugFileName.setText(bundle.getString("Debug.jLabelFullDebugFileName.text")); // NOI18N

        javax.swing.GroupLayout jPanelDebugLayout = new javax.swing.GroupLayout(jPanelDebug);
        jPanelDebug.setLayout(jPanelDebugLayout);
        jPanelDebugLayout.setHorizontalGroup(
            jPanelDebugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDebugLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDebugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonSaveAndClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAbbrechen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDebugSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextDebugFileName)
                    .addGroup(jPanelDebugLayout.createSequentialGroup()
                        .addGroup(jPanelDebugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabelDebugFileName)
                            .addComponent(jCheckBoxDebugWriteActive))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabelFullDebugFileName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelDebugLayout.setVerticalGroup(
            jPanelDebugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDebugLayout.createSequentialGroup()
                .addComponent(jCheckBoxDebugWriteActive)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelDebugFileName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextDebugFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelFullDebugFileName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDebugSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButtonAbbrechen)
                .addGap(18, 18, 18)
                .addComponent(jButtonSaveAndClose)
                .addContainerGap())
        );

        jDebugSlider.getAccessibleContext().setAccessibleName(bundle.getString("Debug.jDebugSlider.AccessibleContext.accessibleName")); // NOI18N
        jDebugSlider.getAccessibleContext().setAccessibleDescription(bundle.getString("Debug.jDebugSlider.AccessibleContext.accessibleDescription")); // NOI18N
        jLabel1.getAccessibleContext().setAccessibleName(bundle.getString("Debug.jLabel1.AccessibleContext.accessibleName")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDebug, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDebug, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelDebug.getAccessibleContext().setAccessibleName(bundle.getString("Debug.jPanelDebug.AccessibleContext.accessibleName")); // NOI18N

        getAccessibleContext().setAccessibleName(bundle.getString("Debug.AccessibleContext.accessibleName")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveAndCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveAndCloseActionPerformed
        Properties prop = new Properties();
        Boolean localChanges = false;


        this.dispose();
    }//GEN-LAST:event_jButtonSaveAndCloseActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        CVNavi.frameInstanceDEBUG = null;
        CVNavi.setFocus();
    }//GEN-LAST:event_formWindowClosed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    }//GEN-LAST:event_formWindowOpened

    private void jButtonAbbrechenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAbbrechenActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonAbbrechenActionPerformed

    private void jDebugSliderCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jDebugSliderCaretPositionChanged
        // TODO add your handling code here:
        if( debugLevel >= 0 ) { System.out.println("LRLRLR Debug.java jSlider1CaretPositionChanged"); }
        checkSliderPos();
    }//GEN-LAST:event_jDebugSliderCaretPositionChanged

    private void jDebugSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jDebugSliderStateChanged
        // TODO add your handling code here:
        if( debugLevel >= 10 ) { System.out.println("LRLRLR Debug.java jSlider1StateChanged"); }
        checkSliderPos();
    }//GEN-LAST:event_jDebugSliderStateChanged

    private void jDebugSliderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDebugSliderMouseDragged
        // TODO add your handling code here:
        if( debugLevel >= 10 ) { System.out.println("jSlider1MouseDragged"); }
        checkSliderPos();
    }//GEN-LAST:event_jDebugSliderMouseDragged

    private void jDebugSliderMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jDebugSliderMouseWheelMoved
        if( debugLevel >= 10 ) { System.out.println("LRLRLR Debug.java jSlider1MouseWheelMoved"); }
        int mwp = evt.getWheelRotation();
        jDebugSlider.setValue(debugLevel-mwp);
        checkSliderPos();
    }//GEN-LAST:event_jDebugSliderMouseWheelMoved

    private void jCheckBoxDebugWriteActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDebugWriteActiveActionPerformed
        if( debugLevel >= 0 ) { System.out.println("LRLRLR Debug.java jCheckBoxDebugWriteActiveActionPerformed"); }
        if( CVNavi.handleDebug2FileOption( ! debug2file ) == true ) {
            if( debugLevel >= 0 ) { CVNavi.originaSystemlOut.println("LRLRLR Debug.java handleDebug2FileOption SUCCESS"); }
            jTextDebugFileName.setEnabled(! debug2file);
        } else {
            if( debugLevel >= 0 ) { CVNavi.originaSystemlOut.println("LRLRLR Debug.java handleDebug2FileOption FAILED"); }
            Path fullPath = FileSystems.getDefault().getPath(debugFileName).toAbsolutePath();
            CVNavi.mbFileOpenError( this, fullPath.toString());
            jCheckBoxDebugWriteActive.setSelected(debug2file);
        }
    }//GEN-LAST:event_jCheckBoxDebugWriteActiveActionPerformed

    private void jTextDebugFileNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextDebugFileNameFocusLost
        String strDFN = jTextDebugFileName.getText();
        // TODO check filename
        debugFileName = strDFN;
        Path fullPath = FileSystems.getDefault().getPath(debugFileName).toAbsolutePath();
        jLabelFullDebugFileName.setText(fullPath.toString());
    }//GEN-LAST:event_jTextDebugFileNameFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAbbrechen;
    private javax.swing.JButton jButtonSaveAndClose;
    private javax.swing.JCheckBox jCheckBoxDebugWriteActive;
    private javax.swing.JSlider jDebugSlider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelDebugFileName;
    private javax.swing.JLabel jLabelFullDebugFileName;
    private javax.swing.JPanel jPanelDebug;
    private javax.swing.JTextField jTextDebugFileName;
    // End of variables declaration//GEN-END:variables

}
