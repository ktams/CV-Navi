/*
 * MultiDec.java
 *
 *
 * @author Kersten Tams Copyright 2009-2018
 * @author Lothar Roth  Copyright 2012-2018
 *
 */

package my.CVNavi;

import java.awt.Cursor;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.ResourceBundle;
import javax.swing.ImageIcon;

/**
 *
 * @author ktams
 */
public class MultiDec extends javax.swing.JFrame {

    public CVNavi CVNavi;
    private TwoWaySerialComm Com = null;
    private javax.swing.Timer timer = null;
    private boolean bAbbruch = false;
    private boolean bRead = false;
    private boolean bWrite = false;
    private ResourceBundle bundle;
    private boolean bWaitAnswerInProgresss=false;
    byte[] bArray = new byte[200];
    public int bytesRead=0;
    private int retries;
    private int cvWert = -1;
    private int cvAnfrage = -1;
    private int decAdr = -1;
    private int SendeZaehler;
    private int CV_Max = 68;
    private int ServoTemp = 0;

    /**
     * Creates new form MultiDec
     */
    public MultiDec() {
        initComponents();
    }

    MultiDec(CVNavi cvnaviThis) {
        if( cvnaviThis == null ) {
            return;
        }
        CVNavi = cvnaviThis;
        if( CVNavi.frameInstanceDEVICE != null ) {
            CVNavi.frameInstanceDEVICE.toFront();
            CVNavi.frameInstanceDEVICE.repaint();
            return;
        }
        initComponents();
        bundle = java.util.ResourceBundle.getBundle("my.CVNavi/Bundle");
        ImageIcon II = null;
        II = new ImageIcon(getClass().getResource("/WD-34.gif"));
        jBild.setIcon(II);
        setTitle( CVNavi.getMenutext( decoderList.MultiDecoder ).trim() );
        this.setIconImage(II.getImage());

        setLocationRelativeTo(cvnaviThis);
        setVisible(true);
        CVNavi.frameInstanceDEVICE = this;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jClose = new javax.swing.JButton();
        jBild = new javax.swing.JLabel();
        jAuslesen = new javax.swing.JButton();
        jSchreiben = new javax.swing.JButton();
        jAbbrechen = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jMode1 = new javax.swing.JRadioButton();
        jMode2 = new javax.swing.JRadioButton();
        jMode3 = new javax.swing.JRadioButton();
        jMode4 = new javax.swing.JRadioButton();
        jMode5 = new javax.swing.JRadioButton();
        jMode6 = new javax.swing.JRadioButton();
        jModeLabel = new javax.swing.JLabel();
        jRC_Ein = new javax.swing.JCheckBox();
        jCH1 = new javax.swing.JCheckBox();
        jCH2 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jVersion = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jAdresse = new javax.swing.JTextField();
        jWeichenAdresse = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jPOM = new javax.swing.JCheckBox();
        jAktAddr = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jOnTimeBorderLabel = new javax.swing.JLabel();
        jOntimeLabel1 = new javax.swing.JLabel();
        jOntimeLabel2 = new javax.swing.JLabel();
        jOntimeLabel3 = new javax.swing.JLabel();
        jOntimeLabel4 = new javax.swing.JLabel();
        jOnTime1 = new javax.swing.JTextField();
        jOnTime2 = new javax.swing.JTextField();
        jOnTime3 = new javax.swing.JTextField();
        jOnTime4 = new javax.swing.JTextField();
        jOnTime5 = new javax.swing.JTextField();
        jOnTime6 = new javax.swing.JTextField();
        jOnTime7 = new javax.swing.JTextField();
        jOnTime8 = new javax.swing.JTextField();
        jPaired1 = new javax.swing.JCheckBox();
        jPaired2 = new javax.swing.JCheckBox();
        jPaired3 = new javax.swing.JCheckBox();
        jPaired4 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSwitchModeBorderLabel = new javax.swing.JLabel();
        jLimitStop1 = new javax.swing.JCheckBox();
        jLimitStop2 = new javax.swing.JCheckBox();
        jLimitStop3 = new javax.swing.JCheckBox();
        jLimitStop4 = new javax.swing.JCheckBox();
        jLimitStopBorderLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jServoSpeed1 = new javax.swing.JTextField();
        jServoPosL1 = new javax.swing.JTextField();
        jServoPosR1 = new javax.swing.JTextField();
        jServoPosR2 = new javax.swing.JTextField();
        jServoPosL2 = new javax.swing.JTextField();
        jServoSpeed2 = new javax.swing.JTextField();
        jServoPosL3 = new javax.swing.JTextField();
        jServoPosR3 = new javax.swing.JTextField();
        jServoSpeed3 = new javax.swing.JTextField();
        jServoPosL4 = new javax.swing.JTextField();
        jServoPosR4 = new javax.swing.JTextField();
        jServoSpeed4 = new javax.swing.JTextField();
        jServoPosL5 = new javax.swing.JTextField();
        jServoPosR5 = new javax.swing.JTextField();
        jServoSpeed5 = new javax.swing.JTextField();
        jServoSpeed6 = new javax.swing.JTextField();
        jServoPosL6 = new javax.swing.JTextField();
        jServoPosR6 = new javax.swing.JTextField();
        jServoPosR7 = new javax.swing.JTextField();
        jServoSpeed7 = new javax.swing.JTextField();
        jServoPosR8 = new javax.swing.JTextField();
        jServoPosL7 = new javax.swing.JTextField();
        jServoSpeed8 = new javax.swing.JTextField();
        jServoPosL8 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jControlOff1 = new javax.swing.JCheckBox();
        jControlOff2 = new javax.swing.JCheckBox();
        jControlOff3 = new javax.swing.JCheckBox();
        jControlOff4 = new javax.swing.JCheckBox();
        jControlOff5 = new javax.swing.JCheckBox();
        jControlOff6 = new javax.swing.JCheckBox();
        jControlOff7 = new javax.swing.JCheckBox();
        jControlOff8 = new javax.swing.JCheckBox();
        jLabel25 = new javax.swing.JLabel();
        jNachlaufzeit = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLP1 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLP2 = new javax.swing.JLabel();
        jLP3 = new javax.swing.JLabel();
        jLP4 = new javax.swing.JLabel();
        jLP5 = new javax.swing.JLabel();
        jLP6 = new javax.swing.JLabel();
        jLP7 = new javax.swing.JLabel();
        jLP8 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jUpdateInfo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("my/CVNavi/Bundle"); // NOI18N
        jClose.setText(bundle.getString("MultiDec.jClose.text")); // NOI18N
        jClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCloseActionPerformed(evt);
            }
        });
        getContentPane().add(jClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 400, 121, -1));
        getContentPane().add(jBild, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 192, 120));

        jAuslesen.setText(bundle.getString("MultiDec.jAuslesen.text")); // NOI18N
        jAuslesen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAuslesenActionPerformed(evt);
            }
        });
        getContentPane().add(jAuslesen, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, 120, -1));

        jSchreiben.setText(bundle.getString("MultiDec.jSchreiben.text")); // NOI18N
        jSchreiben.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSchreibenActionPerformed(evt);
            }
        });
        getContentPane().add(jSchreiben, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 400, 120, -1));

        jAbbrechen.setText(bundle.getString("MultiDec.jAbbrechen.text")); // NOI18N
        jAbbrechen.setEnabled(false);
        jAbbrechen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAbbrechenActionPerformed(evt);
            }
        });
        getContentPane().add(jAbbrechen, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 370, 120, -1));

        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentShown(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonGroup1.add(jMode1);
        jMode1.setSelected(true);
        jMode1.setText(bundle.getString("MultiDec.jMode1.text")); // NOI18N
        jMode1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMode1ActionPerformed(evt);
            }
        });
        jPanel1.add(jMode1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        buttonGroup1.add(jMode2);
        jMode2.setText(bundle.getString("MultiDec.jMode2.text")); // NOI18N
        jMode2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMode2ActionPerformed(evt);
            }
        });
        jPanel1.add(jMode2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        buttonGroup1.add(jMode3);
        jMode3.setText(bundle.getString("MultiDec.jMode3.text")); // NOI18N
        jMode3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMode3ActionPerformed(evt);
            }
        });
        jPanel1.add(jMode3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        buttonGroup1.add(jMode4);
        jMode4.setText(bundle.getString("MultiDec.jMode4.text")); // NOI18N
        jMode4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMode4ActionPerformed(evt);
            }
        });
        jPanel1.add(jMode4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        buttonGroup1.add(jMode5);
        jMode5.setText(bundle.getString("MultiDec.jMode5.text")); // NOI18N
        jMode5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMode5ActionPerformed(evt);
            }
        });
        jPanel1.add(jMode5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        buttonGroup1.add(jMode6);
        jMode6.setText(bundle.getString("MultiDec.jMode6.text")); // NOI18N
        jMode6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMode6ActionPerformed(evt);
            }
        });
        jPanel1.add(jMode6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        jModeLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("MultiDec.jModeLabel.border.title"))); // NOI18N
        jPanel1.add(jModeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 330, 150));

        jRC_Ein.setSelected(true);
        jRC_Ein.setText(bundle.getString("MultiDec.jRC_Ein.text")); // NOI18N
        jPanel1.add(jRC_Ein, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, -1, -1));

        jCH1.setSelected(true);
        jCH1.setText(bundle.getString("MultiDec.jCH1.text")); // NOI18N
        jPanel1.add(jCH1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, -1, -1));

        jCH2.setSelected(true);
        jCH2.setText(bundle.getString("MultiDec.jCH2.text")); // NOI18N
        jPanel1.add(jCH2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 70, -1, -1));

        jLabel2.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("MultiDec.jLabel2.border.title"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 130, 90));

        jVersion.setText(bundle.getString("MultiDec.jVersion.text")); // NOI18N
        jPanel1.add(jVersion, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 140, -1, -1));

        jLabel27.setText(bundle.getString("MultiDec.jLabel27.text")); // NOI18N
        jPanel1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        jAdresse.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jAdresse.setText(bundle.getString("MultiDec.jAdresse.text")); // NOI18N
        jAdresse.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jAdresseFocusLost(evt);
            }
        });
        jAdresse.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jAdresseKeyReleased(evt);
            }
        });
        jPanel1.add(jAdresse, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 40, -1));

        jWeichenAdresse.setText(bundle.getString("MultiDec.jWeichenAdresse.text")); // NOI18N
        jPanel1.add(jWeichenAdresse, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, -1, -1));

        jLabel28.setText(bundle.getString("MultiDec.jLabel28.text")); // NOI18N
        jPanel1.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        jPOM.setText(bundle.getString("MultiDec.jPOM.text")); // NOI18N
        jPOM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPOMActionPerformed(evt);
            }
        });
        jPanel1.add(jPOM, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 170, -1, -1));

        jAktAddr.setEditable(false);
        jAktAddr.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jAktAddr.setText("3");
        jPanel1.add(jAktAddr, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 170, 40, -1));

        jLabel29.setText(bundle.getString("MultiDec.jLabel29.text")); // NOI18N
        jPanel1.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 170, -1, 20));

        jTabbedPane1.addTab(bundle.getString("MultiDec.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel2ComponentShown(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jOnTimeBorderLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("MultiDec.jOnTimeBorderLabel.border.title"))); // NOI18N
        jPanel2.add(jOnTimeBorderLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 280, 110));

        jOntimeLabel1.setText(bundle.getString("MultiDec.jOntimeLabel1.text")); // NOI18N
        jPanel2.add(jOntimeLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        jOntimeLabel2.setText(bundle.getString("MultiDec.jOntimeLabel2.text")); // NOI18N
        jPanel2.add(jOntimeLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        jOntimeLabel3.setText(bundle.getString("MultiDec.jOntimeLabel3.text")); // NOI18N
        jPanel2.add(jOntimeLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        jOntimeLabel4.setText(bundle.getString("MultiDec.jOntimeLabel4.text")); // NOI18N
        jPanel2.add(jOntimeLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        jOnTime1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jOnTime1.setText(bundle.getString("MultiDec.jOnTime1.text")); // NOI18N
        jPanel2.add(jOnTime1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 40, -1));

        jOnTime2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jOnTime2.setText(bundle.getString("MultiDec.jOnTime2.text")); // NOI18N
        jPanel2.add(jOnTime2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 40, 40, -1));

        jOnTime3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jOnTime3.setText(bundle.getString("MultiDec.jOnTime3.text")); // NOI18N
        jPanel2.add(jOnTime3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 40, -1));

        jOnTime4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jOnTime4.setText(bundle.getString("MultiDec.jOnTime4.text")); // NOI18N
        jPanel2.add(jOnTime4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 40, -1));

        jOnTime5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jOnTime5.setText(bundle.getString("MultiDec.jOnTime5.text")); // NOI18N
        jPanel2.add(jOnTime5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 40, -1));

        jOnTime6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jOnTime6.setText(bundle.getString("MultiDec.jOnTime6.text")); // NOI18N
        jPanel2.add(jOnTime6, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, 40, -1));

        jOnTime7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jOnTime7.setText(bundle.getString("MultiDec.jOnTime7.text")); // NOI18N
        jPanel2.add(jOnTime7, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 40, -1));

        jOnTime8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jOnTime8.setText(bundle.getString("MultiDec.jOnTime8.text")); // NOI18N
        jPanel2.add(jOnTime8, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 40, -1));

        jPaired1.setSelected(true);
        jPaired1.setText(bundle.getString("MultiDec.jPaired1.text")); // NOI18N
        jPanel2.add(jPaired1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, -1, -1));

        jPaired2.setSelected(true);
        jPaired2.setText(bundle.getString("MultiDec.jPaired2.text")); // NOI18N
        jPanel2.add(jPaired2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, -1, -1));

        jPaired3.setSelected(true);
        jPaired3.setText(bundle.getString("MultiDec.jPaired3.text")); // NOI18N
        jPanel2.add(jPaired3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, -1, -1));

        jPaired4.setSelected(true);
        jPaired4.setText(bundle.getString("MultiDec.jPaired4.text")); // NOI18N
        jPanel2.add(jPaired4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, -1, -1));

        jLabel3.setText(bundle.getString("MultiDec.jLabel3.text")); // NOI18N
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, 20));

        jLabel4.setText(bundle.getString("MultiDec.jLabel4.text")); // NOI18N
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, 20));

        jLabel5.setText(bundle.getString("MultiDec.jLabel5.text")); // NOI18N
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, 20));

        jLabel6.setText(bundle.getString("MultiDec.jLabel6.text")); // NOI18N
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, 20));

        jSwitchModeBorderLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("MultiDec.jSwitchModeBorderLabel.border.title"))); // NOI18N
        jPanel2.add(jSwitchModeBorderLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 140, 110));

        jLimitStop1.setText(bundle.getString("MultiDec.jLimitStop1.text")); // NOI18N
        jPanel2.add(jLimitStop1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, -1, -1));

        jLimitStop2.setText(bundle.getString("MultiDec.jLimitStop2.text")); // NOI18N
        jPanel2.add(jLimitStop2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, -1, -1));

        jLimitStop3.setText(bundle.getString("MultiDec.jLimitStop3.text")); // NOI18N
        jPanel2.add(jLimitStop3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 190, -1, -1));

        jLimitStop4.setText(bundle.getString("MultiDec.jLimitStop4.text")); // NOI18N
        jPanel2.add(jLimitStop4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 210, -1, -1));

        jLimitStopBorderLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("MultiDec.jLimitStopBorderLabel.border.title"))); // NOI18N
        jPanel2.add(jLimitStopBorderLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 130, 110));

        jLabel9.setText(bundle.getString("MultiDec.jLabel9.text")); // NOI18N
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, -1, 20));

        jLabel10.setText(bundle.getString("MultiDec.jLabel10.text")); // NOI18N
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, -1, 20));

        jLabel11.setText(bundle.getString("MultiDec.jLabel11.text")); // NOI18N
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, -1, 20));

        jLabel12.setText(bundle.getString("MultiDec.jLabel12.text")); // NOI18N
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, -1, 20));

        jTabbedPane1.addTab(bundle.getString("MultiDec.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jPanel3.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel3ComponentShown(evt);
            }
        });
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setText(bundle.getString("MultiDec.jLabel13.text")); // NOI18N
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        jLabel14.setText(bundle.getString("MultiDec.jLabel14.text")); // NOI18N
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jLabel15.setText(bundle.getString("MultiDec.jLabel15.text")); // NOI18N
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel16.setText(bundle.getString("MultiDec.jLabel16.text")); // NOI18N
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jLabel17.setText(bundle.getString("MultiDec.jLabel17.text")); // NOI18N
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jLabel19.setText(bundle.getString("MultiDec.jLabel19.text")); // NOI18N
        jPanel3.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jLabel20.setText(bundle.getString("MultiDec.jLabel20.text")); // NOI18N
        jPanel3.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        jLabel21.setText(bundle.getString("MultiDec.jLabel21.text")); // NOI18N
        jPanel3.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        jLabel18.setText(bundle.getString("MultiDec.jLabel18.text")); // NOI18N
        jPanel3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        jLabel22.setText(bundle.getString("MultiDec.jLabel22.text")); // NOI18N
        jPanel3.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, -1, -1));

        jLabel23.setText(bundle.getString("MultiDec.jLabel23.text")); // NOI18N
        jPanel3.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, -1, -1));

        jServoSpeed1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoSpeed1.setText(bundle.getString("MultiDec.jServoSpeed1.text")); // NOI18N
        jPanel3.add(jServoSpeed1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 40, 60, -1));

        jServoPosL1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoPosL1.setText(bundle.getString("MultiDec.jServoPosL1.text")); // NOI18N
        jServoPosL1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jServoPosL1ActionPerformed(evt);
            }
        });
        jPanel3.add(jServoPosL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 60, -1));

        jServoPosR1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoPosR1.setText(bundle.getString("MultiDec.jServoPosR1.text")); // NOI18N
        jPanel3.add(jServoPosR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 60, -1));

        jServoPosR2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoPosR2.setText(bundle.getString("MultiDec.jServoPosR2.text")); // NOI18N
        jPanel3.add(jServoPosR2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 60, -1));

        jServoPosL2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoPosL2.setText(bundle.getString("MultiDec.jServoPosL2.text")); // NOI18N
        jPanel3.add(jServoPosL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 60, -1));

        jServoSpeed2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoSpeed2.setText(bundle.getString("MultiDec.jServoSpeed2.text")); // NOI18N
        jPanel3.add(jServoSpeed2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 60, -1));

        jServoPosL3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoPosL3.setText(bundle.getString("MultiDec.jServoPosL3.text")); // NOI18N
        jPanel3.add(jServoPosL3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 60, -1));

        jServoPosR3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoPosR3.setText(bundle.getString("MultiDec.jServoPosR3.text")); // NOI18N
        jPanel3.add(jServoPosR3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 60, -1));

        jServoSpeed3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoSpeed3.setText(bundle.getString("MultiDec.jServoSpeed3.text")); // NOI18N
        jPanel3.add(jServoSpeed3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, 60, -1));

        jServoPosL4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoPosL4.setText(bundle.getString("MultiDec.jServoPosL4.text")); // NOI18N
        jPanel3.add(jServoPosL4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 60, -1));

        jServoPosR4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoPosR4.setText(bundle.getString("MultiDec.jServoPosR4.text")); // NOI18N
        jPanel3.add(jServoPosR4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, 60, -1));

        jServoSpeed4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoSpeed4.setText(bundle.getString("MultiDec.jServoSpeed4.text")); // NOI18N
        jPanel3.add(jServoSpeed4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 60, -1));

        jServoPosL5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoPosL5.setText(bundle.getString("MultiDec.jServoPosL5.text")); // NOI18N
        jPanel3.add(jServoPosL5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, 60, -1));

        jServoPosR5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoPosR5.setText(bundle.getString("MultiDec.jServoPosR5.text")); // NOI18N
        jPanel3.add(jServoPosR5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 60, -1));

        jServoSpeed5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoSpeed5.setText(bundle.getString("MultiDec.jServoSpeed5.text")); // NOI18N
        jPanel3.add(jServoSpeed5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 120, 60, -1));

        jServoSpeed6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoSpeed6.setText(bundle.getString("MultiDec.jServoSpeed6.text")); // NOI18N
        jPanel3.add(jServoSpeed6, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, 60, -1));

        jServoPosL6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoPosL6.setText(bundle.getString("MultiDec.jServoPosL6.text")); // NOI18N
        jPanel3.add(jServoPosL6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 60, -1));

        jServoPosR6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoPosR6.setText(bundle.getString("MultiDec.jServoPosR6.text")); // NOI18N
        jPanel3.add(jServoPosR6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 60, -1));

        jServoPosR7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoPosR7.setText(bundle.getString("MultiDec.jServoPosR7.text")); // NOI18N
        jPanel3.add(jServoPosR7, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 60, -1));

        jServoSpeed7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoSpeed7.setText(bundle.getString("MultiDec.jServoSpeed7.text")); // NOI18N
        jPanel3.add(jServoSpeed7, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, 60, -1));

        jServoPosR8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoPosR8.setText(bundle.getString("MultiDec.jServoPosR8.text")); // NOI18N
        jPanel3.add(jServoPosR8, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 60, -1));

        jServoPosL7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoPosL7.setText(bundle.getString("MultiDec.jServoPosL7.text")); // NOI18N
        jPanel3.add(jServoPosL7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 60, -1));

        jServoSpeed8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoSpeed8.setText(bundle.getString("MultiDec.jServoSpeed8.text")); // NOI18N
        jPanel3.add(jServoSpeed8, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, 60, -1));

        jServoPosL8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jServoPosL8.setText(bundle.getString("MultiDec.jServoPosL8.text")); // NOI18N
        jPanel3.add(jServoPosL8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, 60, -1));

        jLabel24.setText(bundle.getString("MultiDec.jLabel24.text")); // NOI18N
        jPanel3.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, -1, -1));

        jControlOff1.setText(bundle.getString("MultiDec.jControlOff1.text")); // NOI18N
        jPanel3.add(jControlOff1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, -1, 20));

        jControlOff2.setText(bundle.getString("MultiDec.jControlOff2.text")); // NOI18N
        jPanel3.add(jControlOff2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 60, -1, 20));

        jControlOff3.setText(bundle.getString("MultiDec.jControlOff3.text")); // NOI18N
        jPanel3.add(jControlOff3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, -1, 20));

        jControlOff4.setText(bundle.getString("MultiDec.jControlOff4.text")); // NOI18N
        jPanel3.add(jControlOff4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, -1, -1));

        jControlOff5.setText(bundle.getString("MultiDec.jControlOff5.text")); // NOI18N
        jPanel3.add(jControlOff5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 120, -1, 20));

        jControlOff6.setText(bundle.getString("MultiDec.jControlOff6.text")); // NOI18N
        jPanel3.add(jControlOff6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 140, -1, 20));

        jControlOff7.setText(bundle.getString("MultiDec.jControlOff7.text")); // NOI18N
        jPanel3.add(jControlOff7, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, -1, 20));

        jControlOff8.setText(bundle.getString("MultiDec.jControlOff8.text")); // NOI18N
        jPanel3.add(jControlOff8, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 180, -1, 20));

        jLabel25.setText(bundle.getString("MultiDec.jLabel25.text")); // NOI18N
        jPanel3.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, -1, 20));

        jNachlaufzeit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jNachlaufzeit.setText(bundle.getString("MultiDec.jNachlaufzeit.text")); // NOI18N
        jPanel3.add(jNachlaufzeit, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 40, -1));

        jLabel26.setText(bundle.getString("MultiDec.jLabel26.text")); // NOI18N
        jPanel3.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 220, -1, 20));

        jLP1.setText(bundle.getString("MultiDec.jLP1.text")); // NOI18N
        jPanel3.add(jLP1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 10, 20));

        jLabel30.setText(bundle.getString("MultiDec.jLabel30.text")); // NOI18N
        jPanel3.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, -1, -1));

        jLP2.setText(bundle.getString("MultiDec.jLP2.text")); // NOI18N
        jPanel3.add(jLP2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 10, 20));

        jLP3.setText(bundle.getString("MultiDec.jLP3.text")); // NOI18N
        jPanel3.add(jLP3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 80, 10, 20));

        jLP4.setText(bundle.getString("MultiDec.jLP4.text")); // NOI18N
        jPanel3.add(jLP4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, 10, 20));

        jLP5.setText(bundle.getString("MultiDec.jLP5.text")); // NOI18N
        jPanel3.add(jLP5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 120, 10, 20));

        jLP6.setText(bundle.getString("MultiDec.jLP6.text")); // NOI18N
        jPanel3.add(jLP6, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 140, 10, 20));

        jLP7.setText(bundle.getString("MultiDec.jLP7.text")); // NOI18N
        jPanel3.add(jLP7, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 160, 10, 20));

        jLP8.setText(bundle.getString("MultiDec.jLP8.text")); // NOI18N
        jPanel3.add(jLP8, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 180, 10, 20));

        jTabbedPane1.addTab(bundle.getString("MultiDec.jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 550, 290));
        getContentPane().add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 320, 270, -1));

        jUpdateInfo.setText(bundle.getString("MultiDec.jUpdateInfo.text")); // NOI18N
        getContentPane().add(jUpdateInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 340, 270, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCloseActionPerformed
        dispose();
    }//GEN-LAST:event_jCloseActionPerformed

    private void jMode1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMode1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMode1ActionPerformed

    private void jMode2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMode2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMode2ActionPerformed

    private void jMode3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMode3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMode3ActionPerformed

    private void jMode4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMode4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMode4ActionPerformed

    private void jMode5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMode5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMode5ActionPerformed

    private void jMode6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMode6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMode6ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
                // store pointer to instance in a final variable -> useable inside ActionListener
        final MultiDec outerThis = this;
        
        final ActionListener actionListener = new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String s;

                if( bAbbruch ) {
                    System.out.println("Abbruch durch Benutzer" );
                    if( bRead || bWrite ) {
                        jProgressBar1.setString(bundle.getString("WD34.BenutzerAbbruch"));
                        CVNavi.mbRWCancelled(outerThis, 5);
                    }
                    stopIOAction();
                    bAbbruch = false;
                    return;
                }

                if( bWaitAnswerInProgresss ) {
                    byte[] bArrayTmp = new byte[200];
                    int newBytes;
                    newBytes = Com.read(bArrayTmp); // was gibts Neues ?
                    if( newBytes > 0 ) {
                        //wenn ja, an bisher empfangene Daten anhängen
                        System.arraycopy(bArrayTmp, 0, bArray, bytesRead, newBytes);
                        if( CVNavi.debugLevel > 0 ) {
                            System.out.println("524 MERGE PRE bytesRead="+bytesRead+" newBytes="+newBytes+" res="+(bytesRead+newBytes) );
                        }
                        bytesRead += newBytes;
                        bArray[bytesRead] = 0;
                        if( CVNavi.debugLevel > 2 ) {
                            System.out.println("529 aktueller Stand: bytesRead="+bytesRead );
                            CVNavi.dumpbArray(bArray);
                        }
                    }

                    if( newBytes == 0 ) {
                        System.out.print("->"+retries+" ");
                        retries--;
                        if( retries == 0 ) {
                            jProgressBar1.setString("Timeout");
                            System.out.println(" -> retries ende bytesRead="+bytesRead );
                            stopIOAction();
                            CVNavi.mbDeviceReadProblem( outerThis );
                            return;
                        }
                        jProgressBar1.setString(bundle.getString("ReadWriteCV.Warte")+retries);
                        return;
                    }

                    // es ist ein vollständiger Datensatz angekommen ?
                    bArray[bytesRead] = 0; // zur Sicherheit ;)

                    if( ! CVNavi.checkReadComplete(bArray) ) {
                        // incomplete -> wait for more
                        return;
                    }
                    bWaitAnswerInProgresss = false;
                    // Datensatz vollständig -> Teste/Analysiere erwarteten Wert
                }

                if(bRead) {
                    // check for a valid PTRD answer
                    cvWert = CVNavi.checkPTRDAnswer( bArray );
                    if( CVNavi.debugLevel >= 0 ) {
                        System.out.println("bRead cv["+cvAnfrage+"]="+cvWert );
                    }
                    if( cvWert < 0 ) {
                        // TODO handle error on read
                        System.out.println("bRead ERROR cv["+cvAnfrage+"]="+cvWert );
                    }

                    switch (SendeZaehler) {
                        case 0:
                            if(cvWert != 62)
                            {
                                bRead = false;
                                stopIOAction();
                                jUpdateInfo.setText(bundle.getString("WD34.wrongvendor"));
                                CVNavi.mbNoTams( outerThis, c.mbRDcancel );
                                return;
                            }

                            SendeZaehler++;
                            cvAnfrage = 1;
                            s = "XPTRD 1\r"; // dec adr % 64
                            jUpdateInfo.setText(bundle.getString("WD34.decoderaddress")+"low");
                            Com.write(s);

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            
                            SendeZaehler++;
                            
                            
                            break;
/*
                        case 1:
                            SendeZaehler++;
                            cvAnfrage = 9;
                            s = "XPTRD 9\r"; // dec adr / 64
                            jUpdateInfo.setText(bundle.getString("WD34.decoderaddress")+"high");
                            Com.write(s);

                            decAdr = cvWert ;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
*/
                        case 2:
                            SendeZaehler++;
                            cvAnfrage = 3;
                            s = "XPTRD 3\r"; // OnTime 1
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"On Time 1");
                            Com.write(s);

                            decAdr = cvWert ;


//                            decAdr += cvWert*64;
                            jAdresse.setText("" + decAdr);
                            String ss = "-> ";
                            if( CVNavi.bSpracheDE ) {
                                ss += "Weiche " ;
                            } else {
                                ss += "Switch " ;
                            }
                            ss += (decAdr*4 - 3) + " - " + decAdr*4;
                            jWeichenAdresse.setText(ss);

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 3:
                            SendeZaehler++;
                            cvAnfrage = 4;
                            s = "XPTRD 4\r"; // OnTime 2
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"On Time 2");
                            Com.write(s);

                            jOnTime1.setText("" + cvWert);

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 4:
                            SendeZaehler++;
                            cvAnfrage = 5;
                            s = "XPTRD 5\r"; // OnTime 3
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"On Time 3");
                            Com.write(s);

                            jOnTime2.setText("" + cvWert);

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 5:
                            SendeZaehler++;
                            cvAnfrage = 6;
                            s = "XPTRD 6\r"; // OnTime 4
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"On Time 4");
                            Com.write(s);

                            jOnTime3.setText("" + cvWert);

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 6:
                            SendeZaehler++;
                            cvAnfrage = 7;
                            s = "XPTRD 7\r"; // Version
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Version");
                            Com.write(s);

                            jOnTime4.setText("" + cvWert);

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 7:
                            SendeZaehler++;
                            cvAnfrage = 29;
                            s = "XPTRD 29\r"; // Konfig 1 (RailCom)
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"config CV29");
                            Com.write(s);

                            jVersion.setText("Version: V" + cvWert/10 + "." + cvWert%10);

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 8:
                            SendeZaehler++;
                            cvAnfrage = 28;
                            s = "XPTRD 28\r"; // Konfig 2
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"config CV28");
                            Com.write(s);

                            // check Bidi/Railcom bit of CV29
                            jRC_Ein.setSelected((cvWert&0x08)==0x08);

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 9:
                            SendeZaehler++;
                            cvAnfrage = 33;
                            s = "XPTRD 33\r"; // On Time 1a
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"On Time CV33");
                            Com.write(s);

                            // check Bidi/Railcom bit of CV28
                            jCH1.setSelected((cvWert&0x01)==0x01);
                            jCH2.setSelected((cvWert&0x02)==0x02);

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 10:
                            SendeZaehler++;
                            cvAnfrage = 34;
                            s = "XPTRD 34\r"; // On Time 2a
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"On Time CV34");
                            Com.write(s);

                            jOnTime5.setText("" + cvWert);

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 11:
                            SendeZaehler++;
                            cvAnfrage = 35;
                            s = "XPTRD 35\r"; // On Time 3a
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"On Time CV35");
                            Com.write(s);

                            jOnTime6.setText("" + cvWert);

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 12:
                            SendeZaehler++;
                            cvAnfrage = 36;
                            s = "XPTRD 36\r"; // On Time 4a
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"On Time CV36");
                            Com.write(s);

                            jOnTime7.setText("" + cvWert);

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 13:
                            SendeZaehler++;
                            cvAnfrage = 38;
                            s = "XPTRD 38\r"; // Mode
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Mode CV38");
                            Com.write(s);

                            jOnTime8.setText("" + cvWert);

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 14:
                            SendeZaehler++;
                            cvAnfrage = 37;
                            s = "XPTRD 37\r"; //Switch Mode
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Switch mode CV37");
                            Com.write(s);

                            jMode1.setSelected(false);
                            jMode2.setSelected(false);
                            jMode3.setSelected(false);
                            jMode4.setSelected(false);
                            jMode5.setSelected(false);
                            jMode6.setSelected(false);
                            switch(cvWert)
                            {
                                case 0:
                                    jMode1.setSelected(true);
                                    break;
                                    
                                case 1:
                                    jMode2.setSelected(true);
                                    break;
                                    
                                case 2:
                                    jMode3.setSelected(true);
                                    break;
                                    
                                case 3:
                                    jMode4.setSelected(true);
                                    break;
                                    
                                case 4:
                                    jMode5.setSelected(true);
                                    break;
                                    
                                case 5:
                                    jMode6.setSelected(true);
                                    break;
                                }

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 15:
                            SendeZaehler++;
                            cvAnfrage = 66;
                            s = "XPTRD 66\r"; // Endabschaltung?
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Limit stop CV66");
                            Com.write(s);

                            // check paired
                            jPaired1.setSelected((cvWert&0x01)==0x01);
                            jPaired2.setSelected((cvWert&0x02)==0x02);
                            jPaired3.setSelected((cvWert&0x04)==0x04);
                            jPaired4.setSelected((cvWert&0x08)==0x08);

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 16:
                            SendeZaehler++;
                            cvAnfrage = 65;
                            s = "XPTRD 65\r"; // Servoansteuerung in Ruhe?
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo control in rest CV65");
                            Com.write(s);

                            // check paired
                            jLimitStop1.setSelected((cvWert&0x01)==0x01);
                            jLimitStop2.setSelected((cvWert&0x02)==0x02);
                            jLimitStop3.setSelected((cvWert&0x04)==0x04);
                            jLimitStop4.setSelected((cvWert&0x08)==0x08);

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 17:
                            SendeZaehler++;
                            cvAnfrage = 67;
                            s = "XPTRD 67\r"; // Nachlaufzeit
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo follow up time CV67");
                            Com.write(s);

                            // check paired
                            jControlOff1.setSelected((cvWert&0x01)==0x01);
                            jControlOff2.setSelected((cvWert&0x02)==0x02);
                            jControlOff3.setSelected((cvWert&0x04)==0x04);
                            jControlOff4.setSelected((cvWert&0x08)==0x08);
                            jControlOff5.setSelected((cvWert&0x10)==0x10);
                            jControlOff6.setSelected((cvWert&0x20)==0x20);
                            jControlOff7.setSelected((cvWert&0x40)==0x40);
                            jControlOff8.setSelected((cvWert&0x80)==0x80);

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 18:
                            SendeZaehler++;
                            cvAnfrage = 40;
                            s = "XPTRD 40\r"; // Servo1 Pos li 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo1 Pos l. CV40");
                            Com.write(s);

                            jNachlaufzeit.setText("" + cvWert);

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 19:
                            SendeZaehler++;
                            cvAnfrage = 140;
                            s = "XPTRD 140\r"; // Servo1 Pos li 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo1 Pos l. CV140");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 20:
                            SendeZaehler++;
                            cvAnfrage = 41;
                            s = "XPTRD 41\r"; // Servo1 Pos re 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo1 Pos r. CV41");
                            Com.write(s);

                            jServoPosL1.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 21:
                            SendeZaehler++;
                            cvAnfrage = 141;
                            s = "XPTRD 141\r"; // Servo1 Pos re 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo1 Pos r. CV141");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 22:
                            SendeZaehler++;
                            cvAnfrage = 42;
                            s = "XPTRD 42\r"; // Servo1 Geschw 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo1 speed CV42");
                            Com.write(s);

                            jServoPosR1.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 23:
                            SendeZaehler++;
                            cvAnfrage = 142;
                            s = "XPTRD 142\r"; // Servo1 Geschw 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo1 speed. CV142");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 24:
                            SendeZaehler++;
                            cvAnfrage = 43;
                            s = "XPTRD 43\r"; // Servo2 Pos li 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo2 Pos l. CV43");
                            Com.write(s);

                            jServoSpeed1.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 25:
                            SendeZaehler++;
                            cvAnfrage = 143;
                            s = "XPTRD 143\r"; // Servo2 Pos li 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo2 Pos l. CV143");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 26:
                            SendeZaehler++;
                            cvAnfrage = 44;
                            s = "XPTRD 44\r"; // Servo2 Pos re 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo2 Pos r. CV44");
                            Com.write(s);

                            jServoPosL2.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 27:
                            SendeZaehler++;
                            cvAnfrage = 144;
                            s = "XPTRD 144\r"; // Servo2 Pos re 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo2 Pos r. CV144");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 28:
                            SendeZaehler++;
                            cvAnfrage = 45;
                            s = "XPTRD 45\r"; // Servo1 Geschw 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo2 speed CV45");
                            Com.write(s);

                            jServoPosR2.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 29:
                            SendeZaehler++;
                            cvAnfrage = 145;
                            s = "XPTRD 145\r"; // Servo2 Geschw 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo2 speed. CV145");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 30:
                            SendeZaehler++;
                            cvAnfrage = 46;
                            s = "XPTRD 46\r"; // Servo3 Pos li 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo3 Pos l. CV46");
                            Com.write(s);

                            jServoSpeed2.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 31:
                            SendeZaehler++;
                            cvAnfrage = 146;
                            s = "XPTRD 146\r"; // Servo3 Pos li 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo3 Pos l. CV146");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 32:
                            SendeZaehler++;
                            cvAnfrage = 47;
                            s = "XPTRD 47\r"; // Servo3 Pos re 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo3 Pos r. CV47");
                            Com.write(s);

                            jServoPosL3.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 33:
                            SendeZaehler++;
                            cvAnfrage = 147;
                            s = "XPTRD 147\r"; // Servo3 Pos re 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo2 Pos r. CV147");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 34:
                            SendeZaehler++;
                            cvAnfrage = 48;
                            s = "XPTRD 48\r"; // Servo3 Geschw 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo3 speed CV48");
                            Com.write(s);

                            jServoPosR3.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 35:
                            SendeZaehler++;
                            cvAnfrage = 148;
                            s = "XPTRD 148\r"; // Servo3 Geschw 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo3 speed. CV148");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 36:
                            SendeZaehler++;
                            cvAnfrage = 49;
                            s = "XPTRD 49\r"; // Servo4 Pos li 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo4 Pos l. CV49");
                            Com.write(s);

                            jServoSpeed3.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 37:
                            SendeZaehler++;
                            cvAnfrage = 149;
                            s = "XPTRD 149\r"; // Servo4 Pos li 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo4 Pos l. CV149");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 38:
                            SendeZaehler++;
                            cvAnfrage = 50;
                            s = "XPTRD 50\r"; // Servo4 Pos re 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo4 Pos r. CV50");
                            Com.write(s);

                            jServoPosL4.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 39:
                            SendeZaehler++;
                            cvAnfrage = 150;
                            s = "XPTRD 150\r"; // Servo4 Pos re 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo4 Pos r. CV150");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 40:
                            SendeZaehler++;
                            cvAnfrage = 51;
                            s = "XPTRD 51\r"; // Servo4 Geschw 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo4 speed CV51");
                            Com.write(s);

                            jServoPosR4.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 41:
                            SendeZaehler++;
                            cvAnfrage = 151;
                            s = "XPTRD 151\r"; // Servo4 Geschw 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo4 speed. CV151");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 42:
                            SendeZaehler++;
                            cvAnfrage = 52;
                            s = "XPTRD 52\r"; // Servo5 Pos li 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo5 Pos l. CV52");
                            Com.write(s);

                            jServoSpeed4.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 43:
                            SendeZaehler++;
                            cvAnfrage = 152;
                            s = "XPTRD 152\r"; // Servo5 Pos li 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo5 Pos l. CV152");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 44:
                            SendeZaehler++;
                            cvAnfrage = 53;
                            s = "XPTRD 53\r"; // Servo5 Pos re 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo5 Pos r. CV53");
                            Com.write(s);

                            jServoPosL5.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 45:
                            SendeZaehler++;
                            cvAnfrage = 153;
                            s = "XPTRD 153\r"; // Servo5 Pos re 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo5 Pos r. CV153");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 46:
                            SendeZaehler++;
                            cvAnfrage = 54;
                            s = "XPTRD 54\r"; // Servo5 Geschw 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo5 speed CV54");
                            Com.write(s);

                            jServoPosR5.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 47:
                            SendeZaehler++;
                            cvAnfrage = 154;
                            s = "XPTRD 154\r"; // Servo5 Geschw 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo5 speed. CV154");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 48:
                            SendeZaehler++;
                            cvAnfrage = 55;
                            s = "XPTRD 55\r"; // Servo6 Pos li 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo6 Pos l. CV55");
                            Com.write(s);

                            jServoSpeed5.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 49:
                            SendeZaehler++;
                            cvAnfrage = 155;
                            s = "XPTRD 155\r"; // Servo6 Pos li 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo6 Pos l. CV155");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 50:
                            SendeZaehler++;
                            cvAnfrage = 56;
                            s = "XPTRD 56\r"; // Servo6 Pos re 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo6 Pos r. CV56");
                            Com.write(s);

                            jServoPosL6.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 51:
                            SendeZaehler++;
                            cvAnfrage = 156;
                            s = "XPTRD 156\r"; // Servo6 Pos re 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo6 Pos r. CV156");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 52:
                            SendeZaehler++;
                            cvAnfrage = 57;
                            s = "XPTRD 57\r"; // Servo6 Geschw 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo6 speed CV57");
                            Com.write(s);

                            jServoPosR6.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 53:
                            SendeZaehler++;
                            cvAnfrage = 157;
                            s = "XPTRD 157\r"; // Servo6 Geschw 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo6 speed. CV157");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 54:
                            SendeZaehler++;
                            cvAnfrage = 58;
                            s = "XPTRD 58\r"; // Servo7 Pos li 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo7 Pos l. CV58");
                            Com.write(s);

                            jServoSpeed6.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 55:
                            SendeZaehler++;
                            cvAnfrage = 158;
                            s = "XPTRD 158\r"; // Servo7 Pos li 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo7 Pos l. CV158");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 56:
                            SendeZaehler++;
                            cvAnfrage = 59;
                            s = "XPTRD 59\r"; // Servo7 Pos re 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo7 Pos r. CV59");
                            Com.write(s);

                            jServoPosL7.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 57:
                            SendeZaehler++;
                            cvAnfrage = 159;
                            s = "XPTRD 159\r"; // Servo7 Pos re 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo7 Pos r. CV159");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 58:
                            SendeZaehler++;
                            cvAnfrage = 60;
                            s = "XPTRD 60\r"; // Servo7 Geschw 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo7 speed CV60");
                            Com.write(s);

                            jServoPosR7.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 59:
                            SendeZaehler++;
                            cvAnfrage = 160;
                            s = "XPTRD 160\r"; // Servo7 Geschw 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo7 speed. CV160");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 60:
                            SendeZaehler++;
                            cvAnfrage = 61;
                            s = "XPTRD 61\r"; // Servo8 Pos li 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo8 Pos l. CV61");
                            Com.write(s);

                            jServoSpeed7.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 61:
                            SendeZaehler++;
                            cvAnfrage = 161;
                            s = "XPTRD 161\r"; // Servo8 Pos li 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo8 Pos l. CV161");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 62:
                            SendeZaehler++;
                            cvAnfrage = 62;
                            s = "XPTRD 62\r"; // Servo8 Pos re 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo8 Pos r. CV62");
                            Com.write(s);

                            jServoPosL8.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 63:
                            SendeZaehler++;
                            cvAnfrage = 162;
                            s = "XPTRD 162\r"; // Servo8 Pos re 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo8 Pos r. CV162");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 64:
                            SendeZaehler++;
                            cvAnfrage = 63;
                            s = "XPTRD 63\r"; // Servo8 Geschw 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo8 speed CV63");
                            Com.write(s);

                            jServoPosR8.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 65:
                            SendeZaehler++;
                            cvAnfrage = 163;
                            s = "XPTRD 163\r"; // Servo8 Geschw 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Servo8 speed. CV163");
                            Com.write(s);

                            ServoTemp = cvWert;

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 66:
                            SendeZaehler++;
                            cvAnfrage = 64;
                            s = "XPTRD 64\r"; // Servo8 Geschw 
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"Last pos. CV64");
                            Com.write(s);

                            jServoSpeed8.setText("" + (cvWert*100 + ServoTemp));

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;

                        case 67:
                            SendeZaehler++;
                            jUpdateInfo.setText(bundle.getString("WD34.read")+"finished");

                            if((cvWert & 1) == 1)
                                jLP1.setText("r");
                            else
                                jLP1.setText("l");
                            
                            if((cvWert & 2) == 2)
                                jLP2.setText("r");
                            else
                                jLP2.setText("l");
                            
                            if((cvWert & 4) == 4)
                                jLP3.setText("r");
                            else
                                jLP3.setText("l");
                            
                            if((cvWert & 8) == 8)
                                jLP4.setText("r");
                            else
                                jLP4.setText("l");
                            
                            if((cvWert & 0x10) == 0x10)
                                jLP5.setText("r");
                            else
                                jLP5.setText("l");
                            
                            if((cvWert & 0x20) == 0x20)
                                jLP6.setText("r");
                            else
                                jLP6.setText("l");
                            
                            if((cvWert & 0x40) == 0x40)
                                jLP7.setText("r");
                            else
                                jLP7.setText("l");
                            
                            if((cvWert & 0x80) == 0x80)
                                jLP8.setText("r");
                            else
                                jLP8.setText("l");
                            
                            bRead = false;

                            jProgressBar1.setString(null);
                            stopIOAction();
                            break;
                    }
                    jProgressBar1.setValue(SendeZaehler);
                }
                if(bWrite) {
                    int Adr = 1;
                    switch (SendeZaehler) {
                        case 0:
                            if(!jPOM.isSelected())
                            {
                                // check for a valid PTRD answer
                                cvWert = CVNavi.checkPTRDAnswer( bArray );
                                if( CVNavi.debugLevel >= 0 ) {
                                    System.out.println("bWrite read cv["+cvAnfrage+"]="+cvWert );
                                }
                                if( cvWert < 0 ) {
                                    // TODO handle error on read
                                    System.out.println("bWrite ERROR cv["+cvAnfrage+"]="+cvWert );
                                }
                                // check for a valid PTRD answer

                                if(cvWert != 62)
                                {
                                   bWrite = false;
                                   stopIOAction();
                                   jUpdateInfo.setText(bundle.getString("WD34.write")+"wrong vendor");
                                   CVNavi.mbNoTams( outerThis, c.mbWRcancel );
                                   return;
                                }
                            }

                            SendeZaehler++;
                            cvWert = CVNavi.checkTextField( outerThis, jAdresse, 1, c.MAX_MM1_ACCMOD, 1, false);
                            Adr = CVNavi.checkTextField( outerThis, jAktAddr, 1, c.MAX_MM1_ACCMOD, 1, false);
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD " + " 1 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 1 " + cvWert + " 10\r";
                            }
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"address");
                            Com.write(s);
                            System.out.println("bWrite cv[1]:="+(cvWert) );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 1:
                            SendeZaehler++;
                            cvWert = CVNavi.checkTextField( outerThis, jOnTime1, 0, 255, 0, false);
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 3 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 3 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"On Time 1");
                            Com.write(s);
                            System.out.println("bWrite cv[3]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 2:
                            SendeZaehler++;
                            cvWert = CVNavi.checkTextField( outerThis, jOnTime5, 0, 255, 0, false);
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 33 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 33 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"On Time 1");
                            Com.write(s);
                            System.out.println("bWrite cv[33]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 3:
                            SendeZaehler++;
                            cvWert = CVNavi.checkTextField( outerThis, jOnTime2, 0, 255, 0, false);
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 4 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 4 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"On Time 2");
                            Com.write(s);
                            System.out.println("bWrite cv[4]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 4:
                            SendeZaehler++;
                            cvWert = CVNavi.checkTextField( outerThis, jOnTime6, 0, 255, 0, false);
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 34 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 34 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"On Time 2");
                            Com.write(s);
                            System.out.println("bWrite cv[34]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 5:
                            SendeZaehler++;
                            cvWert = CVNavi.checkTextField( outerThis, jOnTime3, 0, 255, 0, false);
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 5 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 5 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"On Time 3");
                            Com.write(s);
                            System.out.println("bWrite cv[5]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 6:
                            SendeZaehler++;
                            cvWert = CVNavi.checkTextField( outerThis, jOnTime7, 0, 255, 0, false);
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 35 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 35 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"On Time 3");
                            Com.write(s);
                            System.out.println("bWrite cv[35]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 7:
                            SendeZaehler++;
                            cvWert = CVNavi.checkTextField( outerThis, jOnTime4, 0, 255, 0, false);
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 6 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 6 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"On Time 4");
                            Com.write(s);
                            System.out.println("bWrite cv[6]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 8:
                            SendeZaehler++;
                            cvWert = CVNavi.checkTextField( outerThis, jOnTime8, 0, 255, 0, false);
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 36 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 36 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"On Time 4");
                            Com.write(s);
                            System.out.println("bWrite cv[36]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 9:
                            SendeZaehler++;
                            if(jMode1.isSelected())
                                cvWert = 0;
                            else if(jMode2.isSelected())
                                cvWert = 1;
                            else if(jMode3.isSelected())
                                cvWert = 2;
                            else if(jMode4.isSelected())
                                cvWert = 3;
                            else if(jMode5.isSelected())
                                cvWert = 4;
                            else 
                                cvWert = 5;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 38 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 38 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Mode");
                            Com.write(s);
                            System.out.println("bWrite cv[38]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 10:
                            SendeZaehler++;
                            cvWert = 0;
                            if(jCH1.isSelected())
                                cvWert = 1;
                            if(jCH2.isSelected())
                                cvWert += 2;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 28 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 28 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"RailCom");
                            Com.write(s);
                            System.out.println("bWrite cv[28]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 11:
                            SendeZaehler++;
                            cvWert = 128;
                            if(jCH1.isSelected())
                                cvWert = 136;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 29 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 29 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"RailCom");
                            Com.write(s);
                            System.out.println("bWrite cv[29]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 12:
                            SendeZaehler++;
                            cvWert = 0;
                            if(jPaired1.isSelected())
                                cvWert = 1;
                            if(jPaired2.isSelected())
                                cvWert += 2;
                            if(jPaired3.isSelected())
                                cvWert += 4;
                            if(jPaired4.isSelected())
                                cvWert += 8;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 37 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 37 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Switch mode");
                            Com.write(s);
                            System.out.println("bWrite cv[37]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 13:
                            SendeZaehler++;
                            cvWert = 0;
                            if(jLimitStop1.isSelected())
                                cvWert = 1;
                            if(jLimitStop2.isSelected())
                                cvWert += 2;
                            if(jLimitStop3.isSelected())
                                cvWert += 4;
                            if(jLimitStop4.isSelected())
                                cvWert += 8;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 66 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 66 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Limit stop");
                            Com.write(s);
                            System.out.println("bWrite cv[66]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 14:
                            SendeZaehler++;
                            cvWert = 0;
                            if(jControlOff1.isSelected())
                                cvWert = 1;
                            if(jControlOff2.isSelected())
                                cvWert += 2;
                            if(jControlOff3.isSelected())
                                cvWert += 4;
                            if(jControlOff4.isSelected())
                                cvWert += 8;
                            if(jControlOff5.isSelected())
                                cvWert += 0x10;
                            if(jControlOff6.isSelected())
                                cvWert += 0x20;
                            if(jControlOff7.isSelected())
                                cvWert += 0x40;
                            if(jControlOff8.isSelected())
                                cvWert += 0x80;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 65 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 65 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo control in rest");
                            Com.write(s);
                            System.out.println("bWrite cv[65]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 15:
                            SendeZaehler++;
                            cvWert = CVNavi.checkTextField( outerThis, jNachlaufzeit, 0, 255, 0, false);
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 67 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 67 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Follow up Time");
                            Com.write(s);
                            System.out.println("bWrite cv[67]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 16:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosL1.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 40 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 40 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 1 pos. L");
                            Com.write(s);
                            System.out.println("bWrite cv[40]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 17:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosL1.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 140 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 140 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 1 pos. L");
                            Com.write(s);
                            System.out.println("bWrite cv[140]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 18:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosR1.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 41 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 41 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 1 pos. R");
                            Com.write(s);
                            System.out.println("bWrite cv[41]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 19:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosR1.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 141 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 141 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 1 pos. R");
                            Com.write(s);
                            System.out.println("bWrite cv[141]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 20:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoSpeed1.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 42 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 42 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 1 speed");
                            Com.write(s);
                            System.out.println("bWrite cv[42]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 21:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoSpeed1.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 142 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 142 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 1 speed");
                            Com.write(s);
                            System.out.println("bWrite cv[142]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 22:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosL2.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 43 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 43 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 2 pos. L");
                            Com.write(s);
                            System.out.println("bWrite cv[43]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 23:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosL2.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 143 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 143 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 2 pos. L");
                            Com.write(s);
                            System.out.println("bWrite cv[143]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 24:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosR2.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 44 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 44 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 2 pos. R");
                            Com.write(s);
                            System.out.println("bWrite cv[44]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 25:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosR2.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 144 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 144 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 2 pos. R");
                            Com.write(s);
                            System.out.println("bWrite cv[144]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 26:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoSpeed2.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 45 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 45 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 2 speed");
                            Com.write(s);
                            System.out.println("bWrite cv[45]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 27:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoSpeed2.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 145 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 145 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 2 speed");
                            Com.write(s);
                            System.out.println("bWrite cv[145]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 28:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosL3.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 46 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 46 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 3 pos. L");
                            Com.write(s);
                            System.out.println("bWrite cv[46]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 29:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosL3.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 146 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 146 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 3 pos. L");
                            Com.write(s);
                            System.out.println("bWrite cv[146]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 30:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosR3.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 47 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 47 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 3 pos. R");
                            Com.write(s);
                            System.out.println("bWrite cv[47]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 31:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosR3.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 147 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 147 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 3 pos. R");
                            Com.write(s);
                            System.out.println("bWrite cv[147]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 32:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoSpeed3.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 48 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 48 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 3 speed");
                            Com.write(s);
                            System.out.println("bWrite cv[48]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 33:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoSpeed3.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 148 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 148 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 3 speed");
                            Com.write(s);
                            System.out.println("bWrite cv[148]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 34:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosL4.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 49 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 49 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 4 pos. L");
                            Com.write(s);
                            System.out.println("bWrite cv[49]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 35:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosL4.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 149 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 149 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 4 pos. L");
                            Com.write(s);
                            System.out.println("bWrite cv[149]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 36:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosR4.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 50 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 50 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 4 pos. R");
                            Com.write(s);
                            System.out.println("bWrite cv[50]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 37:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosR1.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 150 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 150 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 4 pos. R");
                            Com.write(s);
                            System.out.println("bWrite cv[150]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 38:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoSpeed4.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 51 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 51 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 4 speed");
                            Com.write(s);
                            System.out.println("bWrite cv[51]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 39:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoSpeed4.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 151 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 151 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 4 speed");
                            Com.write(s);
                            System.out.println("bWrite cv[151]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 40:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosL5.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 52 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 52 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 5 pos. L");
                            Com.write(s);
                            System.out.println("bWrite cv[52]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 41:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosL5.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 152 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 152 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 5 pos. L");
                            Com.write(s);
                            System.out.println("bWrite cv[152]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 42:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosR5.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 53 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 53 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 5 pos. R");
                            Com.write(s);
                            System.out.println("bWrite cv[53]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 43:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosR5.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 153 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 153 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 5 pos. R");
                            Com.write(s);
                            System.out.println("bWrite cv[153]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 44:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoSpeed5.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 54 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 54 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 5 speed");
                            Com.write(s);
                            System.out.println("bWrite cv[54]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 45:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoSpeed5.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 154 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 154 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 5 speed");
                            Com.write(s);
                            System.out.println("bWrite cv[154]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 46:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosL6.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 55 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 55 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 6 pos. L");
                            Com.write(s);
                            System.out.println("bWrite cv[55]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 47:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosL6.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 155 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 155 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 6 pos. L");
                            Com.write(s);
                            System.out.println("bWrite cv[155]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 48:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosR6.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 56 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 56 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 6 pos. R");
                            Com.write(s);
                            System.out.println("bWrite cv[56]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 49:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosR6.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 156 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 156 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 6 pos. R");
                            Com.write(s);
                            System.out.println("bWrite cv[156]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 50:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoSpeed6.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 57 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 57 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 6 speed");
                            Com.write(s);
                            System.out.println("bWrite cv[57]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 51:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoSpeed6.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 157 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 157 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 6 speed");
                            Com.write(s);
                            System.out.println("bWrite cv[157]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 52:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosL7.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 58 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 58 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 7 pos. L");
                            Com.write(s);
                            System.out.println("bWrite cv[58]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 53:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosL7.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 158 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 158 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 7 pos. L");
                            Com.write(s);
                            System.out.println("bWrite cv[158]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 54:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosR7.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 59 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 59 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 7 pos. R");
                            Com.write(s);
                            System.out.println("bWrite cv[59]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 55:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosR7.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 159 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 159 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 7 pos. R");
                            Com.write(s);
                            System.out.println("bWrite cv[159]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 56:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoSpeed7.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 60 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 60 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 7 speed");
                            Com.write(s);
                            System.out.println("bWrite cv[60]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 57:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoSpeed7.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 160 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 160 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 7 speed");
                            Com.write(s);
                            System.out.println("bWrite cv[160]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 58:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosL8.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 61 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 61 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 8 pos. L");
                            Com.write(s);
                            System.out.println("bWrite cv[61]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 59:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosL8.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 161 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 161 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 8 pos. L");
                            Com.write(s);
                            System.out.println("bWrite cv[161]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 60:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosR8.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 62 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 62 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 8 pos. R");
                            Com.write(s);
                            System.out.println("bWrite cv[62]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 61:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoPosR8.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 162 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 162 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 8 pos. R");
                            Com.write(s);
                            System.out.println("bWrite cv[162]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 62:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoSpeed8.getText());
                            cvWert %= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 63 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 63 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 8 speed");
                            Com.write(s);
                            System.out.println("bWrite cv[63]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        case 63:
                            SendeZaehler++;
                            cvWert = Integer.parseInt(jServoSpeed8.getText());
                            cvWert /= 100;
                            if(!jPOM.isSelected())
                            {
                                s = "XPTWD 163 " + cvWert + "\r";
                            }
                            else
                            {
                                s = "XPA " + Adr + " 163 " + cvWert + " 10\r";
                            }
                            
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"Servo 8 speed");
                            Com.write(s);
                            System.out.println("bWrite cv[163]:="+cvWert );

                            bWaitAnswerInProgresss = true;
                            jProgressBar1.setString(null);
                            retries = CVNavi.timerRetries;
                            resetbArray();
                            timer.restart();
                            break;
                            
                        default:
                            SendeZaehler++;
                            bWrite = false;
                            jUpdateInfo.setText(bundle.getString("WD34.write")+"finished");

                            jProgressBar1.setString(null);
                            stopIOAction();
                    }
                    jProgressBar1.setValue(SendeZaehler);
                }                
            }
        };
        timer = new javax.swing.Timer(5000, actionListener);
        timer.setRepeats(false);
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        stopIOAction();
        CVNavi.frameInstanceDEVICE = null;
        CVNavi.setFocus();
    }//GEN-LAST:event_formWindowClosed

    private void jAuslesenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAuslesenActionPerformed
        Com = CVNavi.safelyOpenCom( this, Com );
        if( Com == null ) {
            return;
        }

        CVNavi.flushReadBuffer(Com);
        SendeZaehler = 0;
        cvAnfrage = 8;
        String s = "XPTRD 8\r"; // Hersteller
        jUpdateInfo.setText(bundle.getString("WD34.read")+"verify vendor");
        Com.write(s);
        resetbArray();
        bWaitAnswerInProgresss = true;
        timer.setInitialDelay(CVNavi.timer1);
        timer.setDelay(CVNavi.timer2);
        timer.setRepeats(true);
        retries = CVNavi.timerRetries;
        jProgressBar1.setMaximum(CV_Max);
        bRead = true;
        startIOAction();
    }//GEN-LAST:event_jAuslesenActionPerformed

    private void jServoPosL1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jServoPosL1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jServoPosL1ActionPerformed

    private void jAbbrechenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAbbrechenActionPerformed
        bAbbruch = true;
    }//GEN-LAST:event_jAbbrechenActionPerformed

    private void jSchreibenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSchreibenActionPerformed
        Com = CVNavi.safelyOpenCom( this, Com );
        if( Com == null ) {
            return;
        }
        
        if(!TestValues())
        {
            MsgBox messageBox = new MsgBox( (Frame) null , true, null );
            messageBox.jLabel1.setText(bundle.getString("Fehler"));
            messageBox.jLabel2.setText(bundle.getString("MultiDec.CVWerteKorr"));
            messageBox.jLabel3.setText(bundle.getString("MultiDec.pleaseCheck") );
            messageBox.setVisible(true);
            return;
        }
        CVNavi.flushReadBuffer(Com);
        resetbArray();
        timer.setRepeats(true);
        retries = CVNavi.timerRetries;
        bWrite = true;
        SendeZaehler = 0;
        if(jPOM.isSelected())
        {
            timer.setInitialDelay(CVNavi.timer1/4);
            timer.setDelay(CVNavi.timer2/4);
            Com.write((byte)0x60);
            jUpdateInfo.setText("write: POM");
            jProgressBar1.setMaximum(CV_Max-3);
            startIOAction();
            return;
        }

        timer.setInitialDelay(CVNavi.timer1);
        timer.setDelay(CVNavi.timer2);
        cvAnfrage = 8;
        String s = "XPTRD 8\r"; // Hersteller
        jUpdateInfo.setText("write: verify vendor");
        System.out.println("write: verify vendor");
        Com.write(s);
        jProgressBar1.setMaximum(CV_Max-2);
        bWaitAnswerInProgresss = true;
        startIOAction();
    }//GEN-LAST:event_jSchreibenActionPerformed

    private void jAdresseFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jAdresseFocusLost
        int myDecAdr = CVNavi.checkTextField( this, jAdresse, 1, c.MAX_MM1_ACCMOD, 1, true );
        String ss = "-> ";
        if( CVNavi.bSpracheDE ) {
            ss += "Weiche " ;
        } else {
            ss += "point " ;
        }
        ss += (myDecAdr*4 - 3) + " - " + myDecAdr*4;
        jWeichenAdresse.setText(ss);
    }//GEN-LAST:event_jAdresseFocusLost

    private void jAdresseKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAdresseKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String text = jAdresse.getText();
            int i;
            try {
                i = Integer.parseInt(text);
            } catch (NumberFormatException numberFormatException) {
                i = 1;
            }
            if(i < 1)
                i = 1;
            if(i > 255)
                i = 255;
            jAdresse.setText("" + i);
            jAdresseFocusLost(null);
        }
    }//GEN-LAST:event_jAdresseKeyReleased

    private void jPOMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPOMActionPerformed
        if(jPOM.isSelected())
            jAktAddr.setEditable(true);
        else
            jAktAddr.setEditable(false);
    }//GEN-LAST:event_jPOMActionPerformed

    private void jPanel3ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel3ComponentShown
       jAuslesen.setEnabled(false);
       jSchreiben.setEnabled(false);
    }//GEN-LAST:event_jPanel3ComponentShown

    private void jPanel2ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel2ComponentShown
       jAuslesen.setEnabled(false);
       jSchreiben.setEnabled(false);
    }//GEN-LAST:event_jPanel2ComponentShown

    private void jPanel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentShown
       jAuslesen.setEnabled(true);
       jSchreiben.setEnabled(true);
    }//GEN-LAST:event_jPanel1ComponentShown


    private void stopIOAction() {
        // stop timer
        timer.stop();

        if( bRead ) {
            bRead = false;
            jUpdateInfo.setText(bundle.getString("WD34.read")+bundle.getString("cancelled"));
        }
        if( bWrite ) {
            bWrite = false;
            jUpdateInfo.setText(bundle.getString("WD34.write")+bundle.getString("cancelled"));
        }

        // set buttons to normal operation
        jAuslesen.setEnabled(true);
        jSchreiben.setEnabled(true);
        jAbbrechen.setEnabled(false);
        jAdresse.setEnabled(true);
        jRC_Ein.setEnabled(true);
        jCH1.setEnabled(true);
        jCH2.setEnabled(true);
        jMode1.setEnabled(true);
        jMode2.setEnabled(true);
        jMode3.setEnabled(true);
        jMode4.setEnabled(true);
        jMode5.setEnabled(true);
        jMode6.setEnabled(true);

        // set cursor
        Cursor c = new Cursor(Cursor.DEFAULT_CURSOR );
        setCursor(c);

        // close interface
        Com = CVNavi.safelyCloseCom( this, Com );
    }
    
        private void resetbArray() {
        // reset bArray with '0'
        for( int i = 0 ; i < bytesRead ; i++ ) {
            bArray[i] = 0;
        }
        bytesRead = 0;
    }

    private void startIOAction() {
        bAbbruch = false;
        // set buttons for IO in progress
        jMode1.setEnabled(false);
        jMode2.setEnabled(false);
        jMode3.setEnabled(false);
        jMode4.setEnabled(false);
        jMode5.setEnabled(false);
        jMode6.setEnabled(false);
        jAdresse.setEnabled(false);
        jRC_Ein.setEnabled(false);
        jCH1.setEnabled(false);
        jCH2.setEnabled(false);
        jAuslesen.setEnabled(false);
        jSchreiben.setEnabled(false);
        jAbbrechen.setEnabled(true);
        // init progress bar
        jProgressBar1.setValue(0);
        jProgressBar1.setString(null);
        // set cursor to WAIT
        Cursor c = new Cursor(Cursor.WAIT_CURSOR);
        this.setCursor(c);
        //start timer
        timer.start();
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MultiDec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MultiDec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MultiDec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MultiDec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MultiDec().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jAbbrechen;
    private javax.swing.JTextField jAdresse;
    private javax.swing.JTextField jAktAddr;
    private javax.swing.JButton jAuslesen;
    private javax.swing.JLabel jBild;
    private javax.swing.JCheckBox jCH1;
    private javax.swing.JCheckBox jCH2;
    private javax.swing.JButton jClose;
    private javax.swing.JCheckBox jControlOff1;
    private javax.swing.JCheckBox jControlOff2;
    private javax.swing.JCheckBox jControlOff3;
    private javax.swing.JCheckBox jControlOff4;
    private javax.swing.JCheckBox jControlOff5;
    private javax.swing.JCheckBox jControlOff6;
    private javax.swing.JCheckBox jControlOff7;
    private javax.swing.JCheckBox jControlOff8;
    private javax.swing.JLabel jLP1;
    private javax.swing.JLabel jLP2;
    private javax.swing.JLabel jLP3;
    private javax.swing.JLabel jLP4;
    private javax.swing.JLabel jLP5;
    private javax.swing.JLabel jLP6;
    private javax.swing.JLabel jLP7;
    private javax.swing.JLabel jLP8;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JCheckBox jLimitStop1;
    private javax.swing.JCheckBox jLimitStop2;
    private javax.swing.JCheckBox jLimitStop3;
    private javax.swing.JCheckBox jLimitStop4;
    private javax.swing.JLabel jLimitStopBorderLabel;
    private javax.swing.JRadioButton jMode1;
    private javax.swing.JRadioButton jMode2;
    private javax.swing.JRadioButton jMode3;
    private javax.swing.JRadioButton jMode4;
    private javax.swing.JRadioButton jMode5;
    private javax.swing.JRadioButton jMode6;
    private javax.swing.JLabel jModeLabel;
    private javax.swing.JTextField jNachlaufzeit;
    private javax.swing.JTextField jOnTime1;
    private javax.swing.JTextField jOnTime2;
    private javax.swing.JTextField jOnTime3;
    private javax.swing.JTextField jOnTime4;
    private javax.swing.JTextField jOnTime5;
    private javax.swing.JTextField jOnTime6;
    private javax.swing.JTextField jOnTime7;
    private javax.swing.JTextField jOnTime8;
    private javax.swing.JLabel jOnTimeBorderLabel;
    private javax.swing.JLabel jOntimeLabel1;
    private javax.swing.JLabel jOntimeLabel2;
    private javax.swing.JLabel jOntimeLabel3;
    private javax.swing.JLabel jOntimeLabel4;
    private javax.swing.JCheckBox jPOM;
    private javax.swing.JCheckBox jPaired1;
    private javax.swing.JCheckBox jPaired2;
    private javax.swing.JCheckBox jPaired3;
    private javax.swing.JCheckBox jPaired4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JCheckBox jRC_Ein;
    private javax.swing.JButton jSchreiben;
    private javax.swing.JTextField jServoPosL1;
    private javax.swing.JTextField jServoPosL2;
    private javax.swing.JTextField jServoPosL3;
    private javax.swing.JTextField jServoPosL4;
    private javax.swing.JTextField jServoPosL5;
    private javax.swing.JTextField jServoPosL6;
    private javax.swing.JTextField jServoPosL7;
    private javax.swing.JTextField jServoPosL8;
    private javax.swing.JTextField jServoPosR1;
    private javax.swing.JTextField jServoPosR2;
    private javax.swing.JTextField jServoPosR3;
    private javax.swing.JTextField jServoPosR4;
    private javax.swing.JTextField jServoPosR5;
    private javax.swing.JTextField jServoPosR6;
    private javax.swing.JTextField jServoPosR7;
    private javax.swing.JTextField jServoPosR8;
    private javax.swing.JTextField jServoSpeed1;
    private javax.swing.JTextField jServoSpeed2;
    private javax.swing.JTextField jServoSpeed3;
    private javax.swing.JTextField jServoSpeed4;
    private javax.swing.JTextField jServoSpeed5;
    private javax.swing.JTextField jServoSpeed6;
    private javax.swing.JTextField jServoSpeed7;
    private javax.swing.JTextField jServoSpeed8;
    private javax.swing.JLabel jSwitchModeBorderLabel;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel jUpdateInfo;
    private javax.swing.JLabel jVersion;
    private javax.swing.JLabel jWeichenAdresse;
    // End of variables declaration//GEN-END:variables

    private boolean TestValues() {
        boolean bRet = true;
        int cv_wert;
        
        String text = jAdresse.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jAdresse.setText("(!) " + cv_wert);
        }
        if(cv_wert < 1)
        {
            cv_wert = 1;
            bRet = false;
            jAdresse.setText("(!) " + cv_wert);
        }
        if(cv_wert > 255)
        {
            cv_wert = 255;
            bRet = false;
            jAdresse.setText("(!) " + cv_wert);
        }
        
        
        text = jOnTime1.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jOnTime1.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 1;
            bRet = false;
            jOnTime1.setText("(!) " + cv_wert);
        }
        if(cv_wert > 255)
        {
            cv_wert = 255;
            bRet = false;
            jOnTime1.setText("(!) " + cv_wert);
        }
        
        
        text = jOnTime2.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jOnTime2.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 1;
            bRet = false;
            jOnTime2.setText("(!) " + cv_wert);
        }
        if(cv_wert > 255)
        {
            cv_wert = 255;
            bRet = false;
            jOnTime2.setText("(!) " + cv_wert);
        }
        
        
        text = jOnTime3.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jOnTime3.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 1;
            bRet = false;
            jOnTime3.setText("(!) " + cv_wert);
        }
        if(cv_wert > 255)
        {
            cv_wert = 255;
            bRet = false;
            jOnTime3.setText("(!) " + cv_wert);
        }
        
        
        text = jOnTime4.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jOnTime4.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 1;
            bRet = false;
            jOnTime4.setText("(!) " + cv_wert);
        }
        if(cv_wert > 255)
        {
            cv_wert = 255;
            bRet = false;
            jOnTime4.setText("(!) " + cv_wert);
        }
        
        
        text = jOnTime5.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jOnTime5.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 1;
            bRet = false;
            jOnTime5.setText("(!) " + cv_wert);
        }
        if(cv_wert > 255)
        {
            cv_wert = 255;
            bRet = false;
            jOnTime5.setText("(!) " + cv_wert);
        }
        
        
        text = jOnTime6.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jOnTime6.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 1;
            bRet = false;
            jOnTime6.setText("(!) " + cv_wert);
        }
        if(cv_wert > 255)
        {
            cv_wert = 255;
            bRet = false;
            jOnTime6.setText("(!) " + cv_wert);
        }
        
        
        text = jOnTime7.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jOnTime7.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 1;
            bRet = false;
            jOnTime7.setText("(!) " + cv_wert);
        }
        if(cv_wert > 255)
        {
            cv_wert = 255;
            bRet = false;
            jOnTime7.setText("(!) " + cv_wert);
        }
        
        
        text = jOnTime8.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jOnTime8.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 1;
            bRet = false;
            jOnTime8.setText("(!) " + cv_wert);
        }
        if(cv_wert > 255)
        {
            cv_wert = 255;
            bRet = false;
            jOnTime8.setText("(!) " + cv_wert);
        }
        
        
        text = jNachlaufzeit.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jNachlaufzeit.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 1;
            bRet = false;
            jNachlaufzeit.setText("(!) " + cv_wert);
        }
        if(cv_wert > 255)
        {
            cv_wert = 255;
            bRet = false;
            jNachlaufzeit.setText("(!) " + cv_wert);
        }
        
        
        text = jServoPosL1.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoPosL1.setText("(!) " + cv_wert);
        }
        if(cv_wert < 400)
        {
            cv_wert = 400;
            bRet = false;
            jServoPosL1.setText("(!) " + cv_wert);
        }
        if(cv_wert > 3000)
        {
            cv_wert = 3000;
            bRet = false;
            jServoPosL1.setText("(!) " + cv_wert);
        }
        
        
        text = jServoPosL2.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoPosL2.setText("(!) " + cv_wert);
        }
        if(cv_wert < 400)
        {
            cv_wert = 400;
            bRet = false;
            jServoPosL2.setText("(!) " + cv_wert);
        }
        if(cv_wert > 3000)
        {
            cv_wert = 3000;
            bRet = false;
            jServoPosL2.setText("(!) " + cv_wert);
        }
        
        
        text = jServoPosL3.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoPosL3.setText("(!) " + cv_wert);
        }
        if(cv_wert < 400)
        {
            cv_wert = 400;
            bRet = false;
            jServoPosL3.setText("(!) " + cv_wert);
        }
        if(cv_wert > 3000)
        {
            cv_wert = 3000;
            bRet = false;
            jServoPosL3.setText("(!) " + cv_wert);
        }
        
        
        text = jServoPosL4.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoPosL4.setText("(!) " + cv_wert);
        }
        if(cv_wert < 400)
        {
            cv_wert = 400;
            bRet = false;
            jServoPosL4.setText("(!) " + cv_wert);
        }
        if(cv_wert > 3000)
        {
            cv_wert = 3000;
            bRet = false;
            jServoPosL4.setText("(!) " + cv_wert);
        }
        
        
        text = jServoPosL5.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoPosL5.setText("(!) " + cv_wert);
        }
        if(cv_wert < 400)
        {
            cv_wert = 400;
            bRet = false;
            jServoPosL5.setText("(!) " + cv_wert);
        }
        if(cv_wert > 3000)
        {
            cv_wert = 3000;
            bRet = false;
            jServoPosL5.setText("(!) " + cv_wert);
        }
        
        
        text = jServoPosL6.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoPosL6.setText("(!) " + cv_wert);
        }
        if(cv_wert < 400)
        {
            cv_wert = 400;
            bRet = false;
            jServoPosL6.setText("(!) " + cv_wert);
        }
        if(cv_wert > 3000)
        {
            cv_wert = 3000;
            bRet = false;
            jServoPosL6.setText("(!) " + cv_wert);
        }
        
        
        text = jServoPosL7.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoPosL7.setText("(!) " + cv_wert);
        }
        if(cv_wert < 400)
        {
            cv_wert = 400;
            bRet = false;
            jServoPosL7.setText("(!) " + cv_wert);
        }
        if(cv_wert > 3000)
        {
            cv_wert = 3000;
            bRet = false;
            jServoPosL7.setText("(!) " + cv_wert);
        }
        
        
        text = jServoPosL8.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoPosL8.setText("(!) " + cv_wert);
        }
        if(cv_wert < 400)
        {
            cv_wert = 400;
            bRet = false;
            jServoPosL8.setText("(!) " + cv_wert);
        }
        if(cv_wert > 3000)
        {
            cv_wert = 3000;
            bRet = false;
            jServoPosL8.setText("(!) " + cv_wert);
        }
        
        
        text = jServoPosR1.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoPosR1.setText("(!) " + cv_wert);
        }
        if(cv_wert < 400)
        {
            cv_wert = 400;
            bRet = false;
            jServoPosR1.setText("(!) " + cv_wert);
        }
        if(cv_wert > 3000)
        {
            cv_wert = 3000;
            bRet = false;
            jServoPosR1.setText("(!) " + cv_wert);
        }
        
        
        text = jServoPosR2.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoPosR2.setText("(!) " + cv_wert);
        }
        if(cv_wert < 400)
        {
            cv_wert = 400;
            bRet = false;
            jServoPosR2.setText("(!) " + cv_wert);
        }
        if(cv_wert > 3000)
        {
            cv_wert = 3000;
            bRet = false;
            jServoPosR2.setText("(!) " + cv_wert);
        }
        
        
        text = jServoPosR3.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoPosR3.setText("(!) " + cv_wert);
        }
        if(cv_wert < 400)
        {
            cv_wert = 400;
            bRet = false;
            jServoPosR3.setText("(!) " + cv_wert);
        }
        if(cv_wert > 3000)
        {
            cv_wert = 3000;
            bRet = false;
            jServoPosR3.setText("(!) " + cv_wert);
        }
        
        
        text = jServoPosR4.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoPosR4.setText("(!) " + cv_wert);
        }
        if(cv_wert < 400)
        {
            cv_wert = 400;
            bRet = false;
            jServoPosR4.setText("(!) " + cv_wert);
        }
        if(cv_wert > 3000)
        {
            cv_wert = 3000;
            bRet = false;
            jServoPosR4.setText("(!) " + cv_wert);
        }
        
        
        text = jServoPosR5.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoPosR5.setText("(!) " + cv_wert);
        }
        if(cv_wert < 400)
        {
            cv_wert = 400;
            bRet = false;
            jServoPosR5.setText("(!) " + cv_wert);
        }
        if(cv_wert > 3000)
        {
            cv_wert = 3000;
            bRet = false;
            jServoPosR5.setText("(!) " + cv_wert);
        }
        
        
        text = jServoPosR6.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoPosR6.setText("(!) " + cv_wert);
        }
        if(cv_wert < 400)
        {
            cv_wert = 400;
            bRet = false;
            jServoPosR6.setText("(!) " + cv_wert);
        }
        if(cv_wert > 3000)
        {
            cv_wert = 3000;
            bRet = false;
            jServoPosR6.setText("(!) " + cv_wert);
        }
        
        
        text = jServoPosR7.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoPosR7.setText("(!) " + cv_wert);
        }
        if(cv_wert < 400)
        {
            cv_wert = 400;
            bRet = false;
            jServoPosR7.setText("(!) " + cv_wert);
        }
        if(cv_wert > 3000)
        {
            cv_wert = 3000;
            bRet = false;
            jServoPosR7.setText("(!) " + cv_wert);
        }
        
        
        text = jServoPosR8.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoPosR8.setText("(!) " + cv_wert);
        }
        if(cv_wert < 400)
        {
            cv_wert = 400;
            bRet = false;
            jServoPosR8.setText("(!) " + cv_wert);
        }
        if(cv_wert > 3000)
        {
            cv_wert = 3000;
            bRet = false;
            jServoPosR8.setText("(!) " + cv_wert);
        }
        
        
        text = jServoSpeed1.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoSpeed1.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 0;
            bRet = false;
            jServoSpeed1.setText("(!) " + cv_wert);
        }
        if(cv_wert > 25599)
        {
            cv_wert = 25599;
            bRet = false;
            jServoSpeed1.setText("(!) " + cv_wert);
        }
        
        
        text = jServoSpeed2.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoSpeed2.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 0;
            bRet = false;
            jServoSpeed2.setText("(!) " + cv_wert);
        }
        if(cv_wert > 25599)
        {
            cv_wert = 25599;
            bRet = false;
            jServoSpeed2.setText("(!) " + cv_wert);
        }
        
        
        text = jServoSpeed3.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoSpeed3.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 0;
            bRet = false;
            jServoSpeed3.setText("(!) " + cv_wert);
        }
        if(cv_wert > 25599)
        {
            cv_wert = 25599;
            bRet = false;
            jServoSpeed3.setText("(!) " + cv_wert);
        }
        
        
        text = jServoSpeed4.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoSpeed4.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 0;
            bRet = false;
            jServoSpeed4.setText("(!) " + cv_wert);
        }
        if(cv_wert > 25599)
        {
            cv_wert = 25599;
            bRet = false;
            jServoSpeed4.setText("(!) " + cv_wert);
        }
        
        
        text = jServoSpeed5.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoSpeed5.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 0;
            bRet = false;
            jServoSpeed5.setText("(!) " + cv_wert);
        }
        if(cv_wert > 25599)
        {
            cv_wert = 25599;
            bRet = false;
            jServoSpeed5.setText("(!) " + cv_wert);
        }
        
        
        text = jServoSpeed6.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoSpeed6.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 0;
            bRet = false;
            jServoSpeed6.setText("(!) " + cv_wert);
        }
        if(cv_wert > 25599)
        {
            cv_wert = 25599;
            bRet = false;
            jServoSpeed6.setText("(!) " + cv_wert);
        }
        
        
        text = jServoSpeed7.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoSpeed7.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 0;
            bRet = false;
            jServoSpeed7.setText("(!) " + cv_wert);
        }
        if(cv_wert > 25599)
        {
            cv_wert = 25599;
            bRet = false;
            jServoSpeed7.setText("(!) " + cv_wert);
        }
        
        
        text = jServoSpeed8.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jServoSpeed8.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 0;
            bRet = false;
            jServoSpeed8.setText("(!) " + cv_wert);
        }
        if(cv_wert > 25599)
        {
            cv_wert = 25599;
            bRet = false;
            jServoSpeed8.setText("(!) " + cv_wert);
        }
        
        
        text = jNachlaufzeit.getText();
        try {
            cv_wert = Integer.parseInt(text);
        } catch (NumberFormatException numberFormatException) {
            cv_wert = 1;
            bRet = false;
            jNachlaufzeit.setText("(!) " + cv_wert);
        }
        if(cv_wert < 0)
        {
            cv_wert = 0;
            bRet = false;
            jNachlaufzeit.setText("(!) " + cv_wert);
        }
        if(cv_wert > 255)
        {
            cv_wert = 255;
            bRet = false;
            jNachlaufzeit.setText("(!) " + cv_wert);
        }
        
        
        
        return bRet;
    }
}
