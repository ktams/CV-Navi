/*
 * jInfo.java
 *
 * Created on 20.06.2009, 16:16:40
 *
 * @author Kersten Tams Copyright 2009-2018
 * @author Lothar Roth  Copyright 2012-2018
 *
 */

package my.CVNavi;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import static my.CVNavi.CVNavi.debugLevel;

/**
 *
 * @author ktams
 */
public class jInfo extends javax.swing.JFrame {

    public CVNavi CVNavi;

    /** Creates new form jInfo */
    public jInfo( CVNavi cvnaviThis ) {
        if( cvnaviThis == null ) {
            return;
        }
        CVNavi = cvnaviThis;
        if( CVNavi.frameInstanceINFO != null ) {
            CVNavi.frameInstanceINFO.toFront();
            CVNavi.frameInstanceINFO.repaint();
            return;
        }
        CVNavi.frameInstanceINFO = this;

        initComponents();
        setLocationRelativeTo(cvnaviThis);
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOK = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jInfoText = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jOK.setText("OK");
        jOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOKActionPerformed(evt);
            }
        });

        jInfoText.setEditable(false);
        jInfoText.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jScrollPane1.setViewportView(jInfoText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jOK, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(181, 181, 181))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jOK)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOKActionPerformed
        CVNavi.frameInstanceINFO = null;
        this.dispose();
    }//GEN-LAST:event_jOKActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        InputStream is = null;
        BufferedReader br = null;
        int bytesRead = 0 ;
        try {
            int n;
            Class c = getClass();
            is = c.getResourceAsStream ("/CV_Navi.info");
            int size = -2;
            try {
                size = is.available();
            } catch (IOException ex) {
                Logger.getLogger(jInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("jInfo size="+size);
            char ac[] = new char[size+1];

            if( is != null && size > 0 ) {
                br = new BufferedReader(new InputStreamReader(is));
                try {
                    n = br.read(ac, 0, size);
                    System.out.println("jInfo after TRY n="+n+" size="+size);
                    ac[n] = 0;
                    bytesRead += n;
                } catch (IOException ex) {
                    jInfoText.setText("Info-Datei \"CV_Navi.info\" nicht gefunden.\nA\n"+ex);
                    return;
                }
                finally{
                    if( debugLevel >= 3 ) {
                        System.out.println("jInfo FINALLY A");
                    }
                }
                try {
                    br.close();
                } catch (IOException ex) {
                    jInfoText.setText("Info-Datei \"CV_Navi.info\" nicht gefunden.\nB\n"+ex);
                    return;
                }
                String str1 = new String(ac);
                jInfoText.setText(str1.substring(0, n));
                // Cursor ganz oben Positionieren
                jInfoText.setSelectionStart(0);
                jInfoText.setSelectionEnd(0);
            }

        }
        finally{
            if( debugLevel >= 3 ) {
                System.out.println("jInfo FINALLY B");
            }
            if( bytesRead == 0 )
                jInfoText.setText("Info-Datei \"CV_Navi.info\" nicht gefunden oder leer.");
            if (br != null) {
                try {
                    br.close();
                } catch (IOException ex) {
                    Logger.getLogger(jInfo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (is != null) {
                try {
                    is.close();
                } catch (IOException ex) {
                    Logger.getLogger(jInfo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        setTitle( "Info" );
        jOK.grabFocus();
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        CVNavi.frameInstanceINFO = null;
        CVNavi.setFocus();
    }//GEN-LAST:event_formWindowClosed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane jInfoText;
    private javax.swing.JButton jOK;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
