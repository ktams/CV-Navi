/*
 * CVEditList.java
 *
 *
 * @author Kersten Tams Copyright 2009-2018
 * @author Lothar Roth  Copyright 2012-2018
 * @author Peter Fritze  Copyright 2025
 *
 */
package my.CVNavi;

import java.awt.Dialog;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.util.ResourceBundle;
import static my.CVNavi.CVNavi.debugLevel;

/**
 *
 */
public class CVEditList extends javax.swing.JDialog implements Printable {

    /**
     * Creates new form CVEditList
     */
    public byte CV_To_Edit[] = null;
    private byte CV_To_Edit_Old[];
    public int CV[][] = null;
    public int Decoder = 1;
    public boolean bPrint = false;
    public ReadWriteCV rwcv = null;
    private CVNavi CVNavi = null;
    private ResourceBundle bundle;

    public CVEditList(Dialog parent, boolean modal, CVNavi cvnavi, int[][] CV, byte[] CV_To_Edit, boolean bPrint) {
        super(parent, modal);
        this.CVNavi = cvnavi;
        if (CVNavi != null) {
            this.Decoder = CVNavi.Decoder;
            this.CV = CV;
            this.CV_To_Edit = CV_To_Edit;
            this.bPrint = bPrint;
            this.rwcv = (ReadWriteCV) parent;
            if (debugLevel >= 2) {
                if (CV != null) {
                    System.out.println("CVEditList init CV.length=" + CV.length + " CV[0].length" + CV[0].length);
                } else {
                    System.out.println("CVEditList init CV == null");
                }
            }
            initComponents();
            pack();
            bundle = java.util.ResourceBundle.getBundle("my.CVNavi/Bundle");
            setLocationRelativeTo(parent);
            setVisible(true);
        } else {
            dispose();
        }
    }

    public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    private int getValueForCV(int cvNum) {
        for (int i = 0; i < CV[0].length; i++) {
            if (CV[0][i] == cvNum) {
                return (CV[1][i]);
            }
        }
        return -1;
    }

    private boolean setCVvalue(int cv, int value) {
        for (int i = 0; i < CV[0].length; i++) {
            if (CV[0][i] == cv) {
                CV[1][i] = value;
                return true;
            }
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jAbbruch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jOK = new javax.swing.JButton();
        jGruppe_an = new javax.swing.JButton();
        jGruppe_2 = new javax.swing.JButton();
        jGruppe_1 = new javax.swing.JButton();
        jGruppe_aus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jAbbruch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("my/CVNavi/Bundle"); // NOI18N
        jAbbruch.setText(bundle.getString("CVEditList.jAbbruch.text")); // NOI18N
        jAbbruch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAbbruchActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { Integer.valueOf(1), null, "Adresse", null},
                { Integer.valueOf(2), null, "Mindestgeschwindigkeit", null},
                { Integer.valueOf(3), null, "Anfahrverzögerung", null},
                { Integer.valueOf(4), null, "Bremsverzögerung", null},
                { Integer.valueOf(5), null, "Höchstgeschwindigkeit", null},
                { Integer.valueOf(6), null, "Mittengeschwindigkeit", null},
                { Integer.valueOf(7), null, "Version", null},
                { Integer.valueOf(8), null, "Hersteller-ID", null},
                { Integer.valueOf(9), null, "PWM-Periode", null},
                { Integer.valueOf(10), null, "EMK Cutout", null},
                { Integer.valueOf(11), null, "Packet Time-OutPacket Time-Out", null},
                { Integer.valueOf(12), null, "Verhalten im Analogmodus", null},
                { Integer.valueOf(13), null, "Funktionen im Analogmodus (F1 - F8)", null},
                { Integer.valueOf(14), null, "Funktionen im Analogmodus (F9 - F12)", null},
                { Integer.valueOf(15), null, "Decoder Lock", null},
                { Integer.valueOf(16), null, "Decoder Lock", null},
                { Integer.valueOf(17), null, "lange Adresse MSByte", null},
                { Integer.valueOf(18), null, "lange Adresse LSByte", null},
                { Integer.valueOf(19), null, "Consist-Adresse", null},
                { Integer.valueOf(20), null, "Reserviert", null},
                { Integer.valueOf(21), null, "Consist Addr Active für F1-F8", null},
                { Integer.valueOf(22), null, "Consist Addr Active for F9-F12", null},
                { Integer.valueOf(23), null, "Anfahrverz. Adjustment", null},
                { Integer.valueOf(24), null, "Bremsverz. Adjustment", null},
                { Integer.valueOf(25), null, "Reserviert", null},
                { Integer.valueOf(26), null, "Reserviert", null},
                { Integer.valueOf(27), null, "Bremsverhalten bei Gleichspannung", null},
                { Integer.valueOf(28), null, "RailCom-Einstellungen", null},
                { Integer.valueOf(29), null, "Decoder-Einstellungen", null},
                { Integer.valueOf(30), null, "Fehlerinformation", null},
                { Integer.valueOf(31), null, "Index H", null},
                { Integer.valueOf(32), null, "Index L", null},
                { Integer.valueOf(33), null, "Zuordnung Ausgänge zu Licht vorwärts", null},
                { Integer.valueOf(34), null, "Zuordnung Ausgänge zu Licht rückwärts", null},
                { Integer.valueOf(35), null, "Zuordnung Ausgänge zu F1", null},
                { Integer.valueOf(36), null, "Zuordnung Ausgänge zu F2", null},
                { Integer.valueOf(37), null, "Zuordnung Ausgänge zu F3", null},
                { Integer.valueOf(38), null, "Zuordnung Ausgänge zu F4", null},
                { Integer.valueOf(39), null, "Zuordnung Ausgänge zu F5", null},
                { Integer.valueOf(40), null, "Zuordnung Ausgänge zu F6", null},
                { Integer.valueOf(41), null, "Zuordnung Ausgänge zu F7", null},
                { Integer.valueOf(42), null, "Zuordnung Ausgänge zu F8", null},
                { Integer.valueOf(43), null, "Zuordnung Ausgänge zu F9", null},
                { Integer.valueOf(44), null, "Zuordnung Ausgänge zu F10", null},
                { Integer.valueOf(45), null, "Zuordnung Ausgänge zu F11", null},
                { Integer.valueOf(46), null, "Zuordnung Ausgänge zu F12", null},
                { Integer.valueOf(47), null, "Erweiterte Kick-Funktion", null},
                { Integer.valueOf(48), null, "Motorspannung bei erweiterter Kickfunktion", null},
                { Integer.valueOf(49), null, "Decoder-Einstellungen (Teil 2)", null},
                { Integer.valueOf(50), null, "Lastregelparameter Kp (nur LD-G-x)", null},
                { Integer.valueOf(51), null, "Lastregelparameter Ki (nur LD-G-x)", null},
                { Integer.valueOf(52), null, "Lastregelparameter Kd (nur LD-G-x)", null},
                { Integer.valueOf(53), null, "Effekte AUX1", null},
                { Integer.valueOf(54), null, "Effekte AUX2", null},
                { Integer.valueOf(55), null, "Effekte AUX3", null},
                { Integer.valueOf(56), null, "Effekte AUX4", null},
                { Integer.valueOf(57), null, "Effekte AUX5", null},
                { Integer.valueOf(58), null, "Effekte AUX6", null},
                { Integer.valueOf(59), null, "Kickzeit AUX1/AUX2", null},
                { Integer.valueOf(60), null, "Kickzeit AUX3/AUX4", null},
                { Integer.valueOf(61), null, "Kickzeit AUX5/AUX6", null},
                { Integer.valueOf(62), null, "Dimmen AUX1/AUX2", null},
                { Integer.valueOf(63), null, "Dimmen AUX3/AUX4", null},
                { Integer.valueOf(64), null, "Dimmen AUX5/AUX6", null},
                { Integer.valueOf(65), null, "Kick-Start", null},
                { Integer.valueOf(66), null, "Vorwärts-Trimm", null},
                { Integer.valueOf(67), null, "Alternative Kennl,inie FS 1", null},
                { Integer.valueOf(68), null, "Alternative Kennlinie FS 2", null},
                { Integer.valueOf(69), null, "Alternative Kennlinie FS 3", null},
                { Integer.valueOf(70), null, "Alternative Kennlinie FS 4", null},
                { Integer.valueOf(71), null, "Alternative Kennlinie FS 5", null},
                { Integer.valueOf(72), null, "Alternative Kennlinie FS 6", null},
                { Integer.valueOf(73), null, "Alternative Kennlinie FS 7", null},
                { Integer.valueOf(74), null, "Alternative Kennlinie FS 8", null},
                { Integer.valueOf(75), null, "Alternative Kennlinie FS 9", null},
                { Integer.valueOf(76), null, "Alternative Kennlinie FS 10", null},
                { Integer.valueOf(77), null, "Alternative Kennlinie FS 11", null},
                { Integer.valueOf(78), null, "Alternative Kennlinie FS 12", null},
                { Integer.valueOf(79), null, "Alternative Kennlinie FS 13", null},
                { Integer.valueOf(80), null, "Alternative Kennlinie FS 14", null},
                { Integer.valueOf(81), null, "Alternative Kennlinie FS 15", null},
                { Integer.valueOf(82), null, "Alternative Kennlinie FS 16", null},
                { Integer.valueOf(83), null, "Alternative Kennlinie FS 17", null},
                { Integer.valueOf(84), null, "Alternative Kennlinie FS 18", null},
                { Integer.valueOf(85), null, "Alternative Kennlinie FS 19", null},
                { Integer.valueOf(86), null, "Alternative Kennlinie FS 20", null},
                { Integer.valueOf(87), null, "Alternative Kennlinie FS 21", null},
                { Integer.valueOf(88), null, "Alternative Kennlinie FS 22", null},
                { Integer.valueOf(89), null, "Alternative Kennlinie FS 23", null},
                { Integer.valueOf(90), null, "Alternative Kennlinie FS 24", null},
                { Integer.valueOf(91), null, "Alternative Kennlinie FS 25", null},
                { Integer.valueOf(92), null, "Alternative Kennlinie FS 26", null},
                { Integer.valueOf(93), null, "Alternative Kennlinie FS 27", null},
                { Integer.valueOf(94), null, "Alternative Kennlinie FS 28", null},
                { Integer.valueOf(95), null, "Rückwärts-Trimm", null},
                { Integer.valueOf(96), null, "Reserviert", null},
                { Integer.valueOf(97), null, "Reserviert", null},
                { Integer.valueOf(98), null, "Reserviert", null},
                { Integer.valueOf(99), null, "Reserviert", null},
                { Integer.valueOf(100), null, "Reserviert", null},
                { Integer.valueOf(101), null, "Reserviert", null},
                { Integer.valueOf(102), null, "Reserviert", null},
                { Integer.valueOf(103), null, "Reserviert", null},
                { Integer.valueOf(104), null, "Reserviert", null},
                { Integer.valueOf(105), null, "Benutzer", null},
                { Integer.valueOf(106), null, "Benutzer", null},
                { Integer.valueOf(107), null, "Reserviert", null},
                { Integer.valueOf(108), null, "Reserviert", null},
                { Integer.valueOf(109), null, "Reserviert", null},
                { Integer.valueOf(110), null, "Reserviert", null},
                { Integer.valueOf(111), null, "Reserviert", null},
                { Integer.valueOf(112), null, "Blinkfrequenz", null},
                { Integer.valueOf(113), null, "Fahrstufe Übergang zum altern. Dimmen", null},
                { Integer.valueOf(114), null, "zweite MM-Adresse", null},
                { Integer.valueOf(115), null, "Rangierlicht", null},
                { Integer.valueOf(116), null, "Geschwindigkeitsabhängiges Dimmen", null},
                { Integer.valueOf(117), null, "Grenze für Überlastabschaltung", null},
                { Integer.valueOf(118), null, "Alternatives Dimmen AUX1/AUX2", null},
                { Integer.valueOf(119), null, "Alternatives Dimmen AUX3/AUX4", null},
                { Integer.valueOf(120), null, "Alternatives Dimmen AUX5/AUX6", null},
                { Integer.valueOf(121), null, "FS0: Ausschalten von F0", null},
                { Integer.valueOf(122), null, "FS0: Einschalten der Ausgänge", null},
                { Integer.valueOf(123), null, "FS0: Ausschalten der Funktionen F1 bis F4", null},
                { Integer.valueOf(124), null, "Anpassung Motor <-> Lastregelung", null},
                { Integer.valueOf(125), null, null, null},
                { Integer.valueOf(126), null, null, null},
                { Integer.valueOf(127), null, null, null},
                { Integer.valueOf(128), null, null, null},
                { Integer.valueOf(129), null, null, null},
                { Integer.valueOf(130), null, null, null},
                { Integer.valueOf(131), null, null, null},
                { Integer.valueOf(132), null, null, null},
                { Integer.valueOf(133), null, null, null},
                { Integer.valueOf(134), null, null, null},
                { Integer.valueOf(135), null, null, null},
                { Integer.valueOf(136), null, null, null},
                { Integer.valueOf(137), null, null, null},
                { Integer.valueOf(138), null, null, null},
                { Integer.valueOf(139), null, null, null},
                { Integer.valueOf(140), null, null, null},
                { Integer.valueOf(141), null, null, null},
                { Integer.valueOf(142), null, null, null},
                { Integer.valueOf(143), null, null, null},
                { Integer.valueOf(144), null, null, null},
                { Integer.valueOf(145), null, null, null},
                { Integer.valueOf(146), null, null, null},
                { Integer.valueOf(147), null, null, null},
                { Integer.valueOf(148), null, null, null},
                { Integer.valueOf(149), null, null, null},
                { Integer.valueOf(150), null, null, null},
                { Integer.valueOf(151), null, null, null},
                { Integer.valueOf(152), null, null, null},
                { Integer.valueOf(153), null, null, null},
                { Integer.valueOf(154), null, null, null},
                { Integer.valueOf(155), null, null, null},
                { Integer.valueOf(156), null, null, null},
                { Integer.valueOf(157), null, null, null},
                { Integer.valueOf(158), null, null, null},
                { Integer.valueOf(159), null, null, null},
                { Integer.valueOf(160), null, null, null},
                { Integer.valueOf(161), null, null, null},
                { Integer.valueOf(162), null, null, null},
                { Integer.valueOf(163), null, null, null},
                { Integer.valueOf(164), null, null, null},
                { Integer.valueOf(165), null, null, null},
                { Integer.valueOf(166), null, null, null},
                { Integer.valueOf(167), null, null, null},
                { Integer.valueOf(168), null, null, null},
                { Integer.valueOf(169), null, null, null},
                { Integer.valueOf(170), null, null, null},
                { Integer.valueOf(171), null, null, null},
                { Integer.valueOf(172), null, null, null},
                { Integer.valueOf(173), null, null, null},
                { Integer.valueOf(174), null, null, null},
                { Integer.valueOf(175), null, null, null},
                { Integer.valueOf(176), null, null, null},
                { Integer.valueOf(177), null, null, null},
                { Integer.valueOf(178), null, null, Boolean.valueOf(false)},
                { Integer.valueOf(179), null, null, null},
                { Integer.valueOf(180), null, null, null},
                { Integer.valueOf(181), null, null, null},
                { Integer.valueOf(182), null, null, null},
                { Integer.valueOf(183), null, null, null},
                { Integer.valueOf(184), null, null, null},
                { Integer.valueOf(185), null, null, null},
                { Integer.valueOf(186), null, null, null},
                { Integer.valueOf(187), null, null, null},
                { Integer.valueOf(188), null, null, null},
                { Integer.valueOf(189), null, null, null},
                { Integer.valueOf(190), null, null, null},
                { Integer.valueOf(191), null, null, null},
                { Integer.valueOf(192), null, null, null},
                { Integer.valueOf(193), null, null, null},
                { Integer.valueOf(194), null, null, null},
                { Integer.valueOf(195), null, null, null},
                { Integer.valueOf(196), null, null, null},
                { Integer.valueOf(197), null, null, null},
                { Integer.valueOf(198), null, null, null},
                { Integer.valueOf(199), null, null, null},
                { Integer.valueOf(200), null, null, null},
                { Integer.valueOf(201), null, null, null},
                { Integer.valueOf(202), null, null, null},
                { Integer.valueOf(203), null, null, null},
                { Integer.valueOf(204), null, null, null},
                { Integer.valueOf(205), null, null, null},
                { Integer.valueOf(206), null, null, null},
                { Integer.valueOf(207), null, null, null},
                { Integer.valueOf(208), null, null, null},
                { Integer.valueOf(209), null, null, null},
                { Integer.valueOf(210), null, null, null},
                { Integer.valueOf(211), null, null, null},
                { Integer.valueOf(212), null, null, null},
                { Integer.valueOf(213), null, null, null},
                { Integer.valueOf(214), null, null, null},
                { Integer.valueOf(215), null, null, null},
                { Integer.valueOf(216), null, null, null},
                { Integer.valueOf(217), null, null, null},
                { Integer.valueOf(218), null, null, null},
                { Integer.valueOf(219), null, null, null},
                { Integer.valueOf(220), null, null, null},
                { Integer.valueOf(221), null, null, null},
                { Integer.valueOf(222), null, null, null},
                { Integer.valueOf(223), null, null, null},
                { Integer.valueOf(224), null, null, null},
                { Integer.valueOf(225), null, null, null},
                { Integer.valueOf(226), null, null, null},
                { Integer.valueOf(227), null, null, null},
                { Integer.valueOf(228), null, null, null},
                { Integer.valueOf(229), null, null, null},
                { Integer.valueOf(230), null, null, null},
                { Integer.valueOf(231), null, null, null},
                { Integer.valueOf(232), null, null, null},
                { Integer.valueOf(233), null, null, null},
                { Integer.valueOf(234), null, null, null},
                { Integer.valueOf(235), null, null, null},
                { Integer.valueOf(236), null, null, null},
                { Integer.valueOf(237), null, null, null},
                { Integer.valueOf(238), null, null, null},
                { Integer.valueOf(239), null, null, null},
                { Integer.valueOf(240), null, null, null},
                { Integer.valueOf(241), null, null, null},
                { Integer.valueOf(242), null, null, null},
                { Integer.valueOf(243), null, null, null},
                { Integer.valueOf(244), null, null, null},
                { Integer.valueOf(245), null, null, null},
                { Integer.valueOf(246), null, null, null},
                { Integer.valueOf(247), null, null, null},
                { Integer.valueOf(248), null, null, null},
                { Integer.valueOf(249), null, null, null},
                { Integer.valueOf(250), null, null, null},
                { Integer.valueOf(251), null, null, null},
                { Integer.valueOf(252), null, null, null},
                { Integer.valueOf(253), null, null, null},
                { Integer.valueOf(254), null, null, null},
                { Integer.valueOf(255), null, null, null},
                { Integer.valueOf(256), null, null, null},
                { Integer.valueOf(257), null, null, null},
                { Integer.valueOf(258), null, null, null},
                { Integer.valueOf(259), null, "", null},
                { Integer.valueOf(260), null, "", null},
                { Integer.valueOf(261), null, "", null},
                { Integer.valueOf(262), null, null, null},
                { Integer.valueOf(263), null, "", null},
                { Integer.valueOf(264), null, "", null},
                { Integer.valueOf(265), null, "", null},
                { Integer.valueOf(266), null, null, null},
                { Integer.valueOf(267), null, "", null},
                { Integer.valueOf(268), null, null, null},
                { Integer.valueOf(269), null, null, null},
                { Integer.valueOf(270), null, null, null},
                { Integer.valueOf(271), null, null, null},
                { Integer.valueOf(272), null, null, null},
                { Integer.valueOf(273), null, null, null},
                { Integer.valueOf(274), null, null, null},
                { Integer.valueOf(275), null, null, null},
                { Integer.valueOf(276), null, null, null},
                { Integer.valueOf(277), null, null, null},
                { Integer.valueOf(278), null, null, null},
                { Integer.valueOf(279), null, null, null},
                { Integer.valueOf(280), null, null, null},
                { Integer.valueOf(281), null, null, null},
                { Integer.valueOf(282), null, null, null},
                { Integer.valueOf(283), null, null, null},
                { Integer.valueOf(284), null, null, null},
                { Integer.valueOf(285), null, null, null},
                { Integer.valueOf(286), null, null, null},
                { Integer.valueOf(287), null, null, null},
                { Integer.valueOf(288), null, null, null},
                { Integer.valueOf(289), null, null, null},
                { Integer.valueOf(290), null, null, null},
                { Integer.valueOf(291), null, null, null},
                { Integer.valueOf(292), null, null, null},
                { Integer.valueOf(293), null, null, null},
                { Integer.valueOf(294), null, null, null},
                { Integer.valueOf(295), null, null, null},
                { Integer.valueOf(296), null, null, null},
                { Integer.valueOf(297), null, null, null},
                { Integer.valueOf(298), null, null, null},
                { Integer.valueOf(299), null, null, null},
                { Integer.valueOf(300), null, null, null},
                { Integer.valueOf(301), null, null, null},
                { Integer.valueOf(302), null, null, null},
                { Integer.valueOf(303), null, null, null},
                { Integer.valueOf(304), null, null, null},
                { Integer.valueOf(305), null, null, null},
                { Integer.valueOf(306), null, null, null},
                { Integer.valueOf(307), null, null, null},
                { Integer.valueOf(308), null, null, null},
                { Integer.valueOf(309), null, null, null},
                { Integer.valueOf(310), null, null, null},
                { Integer.valueOf(311), null, null, null},
                { Integer.valueOf(312), null, null, null},
                { Integer.valueOf(313), null, null, null},
                { Integer.valueOf(314), null, null, null},
                { Integer.valueOf(315), null, null, null},
                { Integer.valueOf(316), null, null, null},
                { Integer.valueOf(317), null, null, null},
                { Integer.valueOf(318), null, null, null},
                { Integer.valueOf(319), null, null, null},
                { Integer.valueOf(320), null, null, null},
                { Integer.valueOf(321), null, null, null},
                { Integer.valueOf(322), null, null, null},
                { Integer.valueOf(323), null, null, null},
                { Integer.valueOf(324), null, null, null},
                { Integer.valueOf(325), null, null, null},
                { Integer.valueOf(326), null, null, null},
                { Integer.valueOf(327), null, null, null},
                { Integer.valueOf(328), null, null, null},
                { Integer.valueOf(329), null, null, null},
                { Integer.valueOf(330), null, null, null},
                { Integer.valueOf(331), null, null, null},
                { Integer.valueOf(332), null, null, null},
                { Integer.valueOf(333), null, null, null},
                { Integer.valueOf(334), null, null, null},
                { Integer.valueOf(335), null, null, null},
                { Integer.valueOf(336), null, null, null},
                { Integer.valueOf(337), null, null, null},
                { Integer.valueOf(338), null, null, null},
                { Integer.valueOf(339), null, null, null},
                { Integer.valueOf(340), null, null, null},
                { Integer.valueOf(341), null, null, null},
                { Integer.valueOf(342), null, null, null},
                { Integer.valueOf(343), null, null, null},
                { Integer.valueOf(344), null, null, null},
                { Integer.valueOf(345), null, null, null},
                { Integer.valueOf(346), null, null, null},
                { Integer.valueOf(347), null, null, null},
                { Integer.valueOf(348), null, null, null},
                { Integer.valueOf(349), null, null, null},
                { Integer.valueOf(350), null, null, null},
                { Integer.valueOf(351), null, null, null},
                { Integer.valueOf(352), null, null, null},
                { Integer.valueOf(353), null, null, null},
                { Integer.valueOf(354), null, null, null},
                { Integer.valueOf(355), null, null, null},
                { Integer.valueOf(356), null, null, null},
                { Integer.valueOf(357), null, null, null},
                { Integer.valueOf(358), null, null, null},
                { Integer.valueOf(359), null, null, null},
                { Integer.valueOf(360), null, null, null},
                { Integer.valueOf(361), null, null, null},
                { Integer.valueOf(362), null, null, null},
                { Integer.valueOf(363), null, null, null},
                { Integer.valueOf(364), null, null, null},
                { Integer.valueOf(365), null, null, null},
                { Integer.valueOf(366), null, null, null},
                { Integer.valueOf(367), null, null, null},
                { Integer.valueOf(368), null, null, null},
                { Integer.valueOf(369), null, null, null},
                { Integer.valueOf(370), null, null, null},
                { Integer.valueOf(371), null, null, null},
                { Integer.valueOf(372), null, null, null},
                { Integer.valueOf(373), null, null, null},
                { Integer.valueOf(374), null, null, null},
                { Integer.valueOf(375), null, null, null},
                { Integer.valueOf(376), null, null, null},
                { Integer.valueOf(377), null, null, null},
                { Integer.valueOf(378), null, null, null},
                { Integer.valueOf(379), null, null, null},
                { Integer.valueOf(380), null, null, null},
                { Integer.valueOf(381), null, null, null},
                { Integer.valueOf(382), null, null, null},
                { Integer.valueOf(383), null, null, null},
                { Integer.valueOf(384), null, null, null},
                { Integer.valueOf(385), null, null, null},
                { Integer.valueOf(386), null, null, null},
                { Integer.valueOf(387), null, null, null},
                { Integer.valueOf(388), null, null, null},
                { Integer.valueOf(389), null, null, null},
                { Integer.valueOf(390), null, null, null},
                { Integer.valueOf(391), null, null, null},
                { Integer.valueOf(392), null, null, null},
                { Integer.valueOf(393), null, null, null},
                { Integer.valueOf(394), null, null, null},
                { Integer.valueOf(395), null, null, null},
                { Integer.valueOf(396), null, null, null},
                { Integer.valueOf(397), null, null, null},
                { Integer.valueOf(398), null, null, null},
                { Integer.valueOf(399), null, null, null},
                { Integer.valueOf(400), null, null, null},
                { Integer.valueOf(401), null, null, null},
                { Integer.valueOf(402), null, null, null},
                { Integer.valueOf(403), null, null, null},
                { Integer.valueOf(404), null, null, null},
                { Integer.valueOf(405), null, null, null},
                { Integer.valueOf(406), null, null, null},
                { Integer.valueOf(407), null, null, null},
                { Integer.valueOf(408), null, null, null},
                { Integer.valueOf(409), null, null, null},
                { Integer.valueOf(410), null, null, null},
                { Integer.valueOf(411), null, null, null},
                { Integer.valueOf(412), null, null, null},
                { Integer.valueOf(413), null, null, null},
                { Integer.valueOf(414), null, null, null},
                { Integer.valueOf(415), null, null, null},
                { Integer.valueOf(416), null, null, null},
                { Integer.valueOf(417), null, null, null},
                { Integer.valueOf(418), null, null, null},
                { Integer.valueOf(419), null, null, null},
                { Integer.valueOf(420), null, null, null},
                { Integer.valueOf(421), null, null, null},
                { Integer.valueOf(422), null, null, null},
                { Integer.valueOf(423), null, null, null},
                { Integer.valueOf(424), null, null, null},
                { Integer.valueOf(425), null, null, null},
                { Integer.valueOf(426), null, null, null},
                { Integer.valueOf(427), null, null, null},
                { Integer.valueOf(428), null, null, null},
                { Integer.valueOf(429), null, null, null},
                { Integer.valueOf(430), null, null, null},
                { Integer.valueOf(431), null, null, null},
                { Integer.valueOf(432), null, null, null},
                { Integer.valueOf(433), null, null, null},
                { Integer.valueOf(434), null, null, null},
                { Integer.valueOf(435), null, null, null},
                { Integer.valueOf(436), null, null, null},
                { Integer.valueOf(437), null, null, null},
                { Integer.valueOf(438), null, null, null},
                { Integer.valueOf(439), null, null, null},
                { Integer.valueOf(440), null, null, null},
                { Integer.valueOf(441), null, null, null},
                { Integer.valueOf(442), null, null, null},
                { Integer.valueOf(443), null, null, null},
                { Integer.valueOf(444), null, null, null},
                { Integer.valueOf(445), null, null, null},
                { Integer.valueOf(446), null, null, null},
                { Integer.valueOf(447), null, null, null},
                { Integer.valueOf(448), null, null, null},
                { Integer.valueOf(449), null, null, null},
                { Integer.valueOf(450), null, null, null},
                { Integer.valueOf(451), null, null, null},
                { Integer.valueOf(452), null, null, null},
                { Integer.valueOf(453), null, null, null},
                { Integer.valueOf(454), null, null, null},
                { Integer.valueOf(455), null, null, null},
                { Integer.valueOf(456), null, null, null},
                { Integer.valueOf(457), null, null, null},
                { Integer.valueOf(458), null, null, null},
                { Integer.valueOf(459), null, null, null},
                { Integer.valueOf(460), null, null, null},
                { Integer.valueOf(461), null, null, null},
                { Integer.valueOf(462), null, null, null},
                { Integer.valueOf(463), null, null, null},
                { Integer.valueOf(464), null, null, null},
                { Integer.valueOf(465), null, null, null},
                { Integer.valueOf(466), null, null, null},
                { Integer.valueOf(467), null, null, null},
                { Integer.valueOf(468), null, null, null},
                { Integer.valueOf(469), null, null, null},
                { Integer.valueOf(470), null, null, null},
                { Integer.valueOf(471), null, null, null},
                { Integer.valueOf(472), null, null, null},
                { Integer.valueOf(473), null, null, null},
                { Integer.valueOf(474), null, null, null},
                { Integer.valueOf(475), null, null, null},
                { Integer.valueOf(476), null, null, null},
                { Integer.valueOf(477), null, null, null},
                { Integer.valueOf(478), null, null, null},
                { Integer.valueOf(479), null, null, null},
                { Integer.valueOf(480), null, null, null},
                { Integer.valueOf(481), null, null, null},
                { Integer.valueOf(482), null, null, null},
                { Integer.valueOf(483), null, null, null},
                { Integer.valueOf(484), null, null, null},
                { Integer.valueOf(485), null, null, null},
                { Integer.valueOf(486), null, null, null},
                { Integer.valueOf(487), null, null, null},
                { Integer.valueOf(488), null, null, null},
                { Integer.valueOf(489), null, null, null},
                { Integer.valueOf(490), null, null, null},
                { Integer.valueOf(491), null, null, null},
                { Integer.valueOf(492), null, null, null},
                { Integer.valueOf(493), null, null, null},
                { Integer.valueOf(494), null, null, null},
                { Integer.valueOf(495), null, null, null},
                { Integer.valueOf(496), null, null, null},
                { Integer.valueOf(497), null, null, null},
                { Integer.valueOf(498), null, null, null},
                { Integer.valueOf(499), null, null, null},
                { Integer.valueOf(500), null, null, null},
                { Integer.valueOf(501), null, null, null},
                { Integer.valueOf(502), null, null, null},
                { Integer.valueOf(503), null, null, null},
                { Integer.valueOf(504), null, null, null},
                { Integer.valueOf(505), null, null, null},
                { Integer.valueOf(506), null, null, null},
                { Integer.valueOf(507), null, null, null},
                { Integer.valueOf(508), null, null, null},
                { Integer.valueOf(509), null, null, null},
                { Integer.valueOf(510), null, null, null},
                { Integer.valueOf(511), null, null, null},
                { Integer.valueOf(512), null, null, null}
            },
            new String [] {
                "CV", "Wert", "Bemerkungen", "prog"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setIntercellSpacing(new java.awt.Dimension(3, 9));
        jTable1.setRowHeight(22);
        jTable1.setRowSelectionAllowed(false);
        jTable1.getTableHeader().setResizingAllowed(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(25);
            jTable1.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("CVEditList.jTable1.columnModel.title0")); // NOI18N
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(25);
            jTable1.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("CVEditList.jTable1.columnModel.title1")); // NOI18N
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(340);
            jTable1.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("CVEditList.jTable1.columnModel.title2")); // NOI18N
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(35);
            jTable1.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("CVEditList.jTable1.columnModel.title3")); // NOI18N
        }

        jOK.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jOK.setText(bundle.getString("CVEditList.jOK.text")); // NOI18N
        jOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOKActionPerformed(evt);
            }
        });

        jGruppe_an.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jGruppe_an.setText(bundle.getString("CVEditList.jGruppe_an.text")); // NOI18N
        jGruppe_an.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGruppe_anActionPerformed(evt);
            }
        });

        jGruppe_2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jGruppe_2.setText(bundle.getString("CVEditList.jGruppe_2.text")); // NOI18N
        jGruppe_2.setToolTipText(bundle.getString("CVEditList.jGruppe_2.toolTipText")); // NOI18N
        jGruppe_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGruppe_2ActionPerformed(evt);
            }
        });

        jGruppe_1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jGruppe_1.setText(bundle.getString("CVEditList.jGruppe_1.text")); // NOI18N
        jGruppe_1.setToolTipText(bundle.getString("CVEditList.jGruppe_1.toolTipText")); // NOI18N
        jGruppe_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGruppe_1ActionPerformed(evt);
            }
        });

        jGruppe_aus.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jGruppe_aus.setText(bundle.getString("CVEditList.jGruppe_aus.text")); // NOI18N
        jGruppe_aus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGruppe_ausActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jGruppe_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jGruppe_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jGruppe_an, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jGruppe_aus, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))
                        .addGap(6, 6, 6))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jAbbruch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jOK, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(jGruppe_aus)
                        .addGap(16, 16, 16)
                        .addComponent(jGruppe_1)
                        .addGap(16, 16, 16)
                        .addComponent(jGruppe_2)
                        .addGap(16, 16, 16)
                        .addComponent(jGruppe_an)))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAbbruch)
                    .addComponent(jOK))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jAbbruchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAbbruchActionPerformed
        this.dispose();
    }//GEN-LAST:event_jAbbruchActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        for (int i = 0; i < CV[0].length; i++) {
            if (CV_To_Edit_Old[i] == 1) {
                CV_To_Edit[i] = 1;
                continue;
            } else {
                jTable1.setValueAt(false, i, 3);
            }
        }
    }//GEN-LAST:event_jTable1MouseReleased

    private void jOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOKActionPerformed
        if (!bPrint) {
            int k = 0;
            for (int i = 0; i < CV[0].length; i++) {
                Object valueAt = jTable1.getValueAt(i, 3);
                String str = "" + valueAt;
                if (str.equals("true")) {
                    CV_To_Edit[i] = 1;
                    Object n = jTable1.getValueAt(i, 1);
                    int value = 0;
                    try {
                        value = Integer.parseInt("" + n);
                        //value = (Integer) n;
                        setCVvalue((i + 1), value);
                    } catch (Exception ex) {
                        System.out.println("jOKActionPerformed ex " + ex.getMessage());
                    }
                } else {
                    CV_To_Edit[i] = 0;
                }
            }
        } else {
            try {
                jTable1.print();
            } catch (PrinterException ex) {
                MsgBox messageBox = new MsgBox((Frame) this.getParent(), true, this);
                messageBox.jLabel1.setText(bundle.getString("Fehler"));
                messageBox.jLabel2.setText(bundle.getString("DruckProbleme"));
                messageBox.jLabel3.setText(bundle.getString("AusdruckAbbruch"));
                messageBox.setVisible(true);
                return;
            }
        }
        this.dispose();
    }//GEN-LAST:event_jOKActionPerformed

    private void jGruppe_anActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGruppe_anActionPerformed
        for (int i = 0; i < CV[0].length; i++) {
            if (CV_To_Edit_Old[i] == 1) {
                CV_To_Edit[i] = 1; // = CV_To_Edit_Old[i];
                jTable1.setValueAt(true, i, 3);
            }
        }
    }//GEN-LAST:event_jGruppe_anActionPerformed

    private void jGruppe_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGruppe_2ActionPerformed
        int cvNr;
        for (int i = 1; i < CV[0].length; i++) {
            cvNr = CV[0][i];
            if (cvNr == 0) {
                continue;
            }
            if (CVNavi.checkNumRange(cvNr, 33, 46)) {
                CV_To_Edit[cvNr - 1] = 1;
            }
            if (CVNavi.checkNumRange(cvNr, 53, 58)) {
                CV_To_Edit[cvNr - 1] = 1;
            }
            if (CVNavi.checkNumRange(cvNr, 62, 64)) {
                CV_To_Edit[cvNr - 1] = 1;
            }
        }
        // Update Column 3
        for (int i = 0; i < CV[0].length; i++) {
            if (CV_To_Edit[i] == 1) {
                jTable1.setValueAt(true, i, 3);
            }
        }
    }//GEN-LAST:event_jGruppe_2ActionPerformed

    private void jGruppe_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGruppe_1ActionPerformed
        int cvNr;
        for (int i = 1; i < CV[0].length; i++) {
            cvNr = CV[0][i];
            if (cvNr == 0) {
                continue;
            }
            if (CVNavi.checkNumRange(cvNr, 1, 5)) {
                CV_To_Edit[cvNr - 1] = 1;
            }
            if (CVNavi.checkNumRange(cvNr, 17, 19)) {
                CV_To_Edit[cvNr - 1] = 1;
            }
            if (cvNr == 29) {
                CV_To_Edit[cvNr - 1] = 1;
            }
            if (CVNavi.checkNumRange(cvNr, 49, 52)) {
                CV_To_Edit[cvNr - 1] = 1;
            }
            if (cvNr == 65) {
                CV_To_Edit[cvNr - 1] = 1;
            }
            if (cvNr == 114) {
                CV_To_Edit[cvNr - 1] = 1;
            }
            if (cvNr == 124) {
                CV_To_Edit[cvNr - 1] = 1;
            }
        }
        // Update Column 3
        for (int i = 0; i < CV[0].length; i++) {
            if (CV_To_Edit[i] == 1) {
                jTable1.setValueAt(true, i, 3);
            }
        }
    }//GEN-LAST:event_jGruppe_1ActionPerformed

    private void jGruppe_ausActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGruppe_ausActionPerformed
        for (int i = 0; i < CV[0].length; i++) {
            jTable1.setValueAt(false, i, 3);
            CV_To_Edit[i] = 0;
        }
    }//GEN-LAST:event_jGruppe_ausActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        int k = 0;
        CV_To_Edit_Old = new byte[512];
        switch (Decoder) {
            case c.FD_M: //FD-M
                jTable1.setValueAt(" ", 46, 2);
                jTable1.setValueAt(" ", 47, 2);

                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX1", 48, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX2", 49, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX3", 50, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX4", 51, 2);

                jTable1.setValueAt(bundle.getString("Kickzeit") + " AUX1", 56, 2);
                jTable1.setValueAt(bundle.getString("Kickzeit") + " AUX2", 57, 2);
                jTable1.setValueAt(bundle.getString("Kickzeit") + " AUX3", 58, 2);
                jTable1.setValueAt(bundle.getString("Kickzeit") + " AUX4", 59, 2);

                jTable1.setValueAt(bundle.getString("Blinken") + " AUX1", 60, 2);
                jTable1.setValueAt(bundle.getString("Blinken") + " AUX2", 61, 2);
                jTable1.setValueAt(bundle.getString("Blinken") + " AUX3", 62, 2);
                jTable1.setValueAt(bundle.getString("Blinken") + " AUX4", 63, 2);

                jTable1.setValueAt(bundle.getString("Umschaltspannung"), 112, 2);
                for (int i = 114; i < CV[0].length; i++) {
                    jTable1.setValueAt(" ", i, 2);
                }
                break;

            case c.FD_R: //FD-R
                jTable1.setValueAt(" ", 46, 2);
                jTable1.setValueAt(" ", 47, 2);

                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX1", 48, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX2", 49, 2);
                jTable1.setValueAt(" ", 50, 2);
                jTable1.setValueAt(" ", 51, 2);

                jTable1.setValueAt(" ", 56, 2);
                jTable1.setValueAt(" ", 57, 2);
                jTable1.setValueAt(" ", 58, 2);
                jTable1.setValueAt(" ", 59, 2);

                jTable1.setValueAt(bundle.getString("Blinken") + " AUX1", 60, 2);
                jTable1.setValueAt(bundle.getString("Blinken") + " AUX2", 61, 2);
                jTable1.setValueAt(" ", 62, 2);
                jTable1.setValueAt(" ", 63, 2);

                jTable1.setValueAt(" ", 112, 2);
                for (int i = 114; i < CV[0].length; i++) {
                    jTable1.setValueAt(" ", i, 2);
                }
                break;

            case c.FD_XL: //FD-XL
                jTable1.setValueAt(" ", 46, 2);
                jTable1.setValueAt(" ", 47, 2);

                jTable1.setValueAt(" ", 49, 2);
                jTable1.setValueAt(" ", 50, 2);
                jTable1.setValueAt(" ", 51, 2);

                jTable1.setValueAt(" ", 116, 2);

                for (int i = 124; i < CV[0].length; i++) {
                    jTable1.setValueAt(" ", i, 2);
                }
                break;

            case c.FD_LED: //FD-LED
                jTable1.setValueAt(" ", 1, 2);
                jTable1.setValueAt(" ", 2, 2);
                jTable1.setValueAt(" ", 3, 2);
                jTable1.setValueAt(bundle.getString("Spannungsreduzierung") + " AUX1", 4, 2);
                jTable1.setValueAt(bundle.getString("Spannungsreduzierung") + " AUX2", 5, 2);
                for (int i = 8; i < 16; i++) {
                    jTable1.setValueAt(" ", i, 2);
                }
                jTable1.setValueAt("Consistadresse", 18, 2);
                for (int i = 19; i < 28; i++) {
                    jTable1.setValueAt(" ", i, 2);
                }
                for (int i = 30; i < 32; i++) {
                    jTable1.setValueAt(" ", i, 2);
                }
                for (int i = 34; i <= 61; i++) { // CV45 -> F1 bis CV62 -> F28
                    jTable1.setValueAt(bundle.getString("ZuordnungZuF") + (i - 33), i, 2);
                }
                for (int i = 62; i < CV[0].length; i++) {
                    jTable1.setValueAt(" ", i, 2);
                }
                break;

            case c.WIB_30: //WIB
                jTable1.setValueAt(" ", 1, 2);
                jTable1.setValueAt(" ", 2, 2);
                jTable1.setValueAt(" ", 3, 2);
                jTable1.setValueAt(" ", 4, 2);
                jTable1.setValueAt(" ", 5, 2);
                jTable1.setValueAt(" ", 8, 2);
                jTable1.setValueAt(" ", 9, 2);
                jTable1.setValueAt(" ", 10, 2);
                jTable1.setValueAt(" ", 11, 2);
                jTable1.setValueAt(" ", 13, 2);
                jTable1.setValueAt(" ", 14, 2);
                jTable1.setValueAt(" ", 15, 2);
                jTable1.setValueAt(" ", 19, 2);
                jTable1.setValueAt(" ", 20, 2);
                jTable1.setValueAt(" ", 21, 2);
                jTable1.setValueAt(" ", 22, 2);
                jTable1.setValueAt(" ", 23, 2);
                jTable1.setValueAt(" ", 24, 2);
                jTable1.setValueAt(" ", 25, 2);
                jTable1.setValueAt(" ", 26, 2);
                jTable1.setValueAt(" ", 29, 2);
                jTable1.setValueAt(" ", 30, 2);
                jTable1.setValueAt(" ", 31, 2);
                jTable1.setValueAt(" ", 46, 2);
                jTable1.setValueAt(" ", 47, 2);
                jTable1.setValueAt(" ", 48, 2);
                jTable1.setValueAt(" ", 49, 2);
                jTable1.setValueAt(" ", 40, 2);
                jTable1.setValueAt(" ", 50, 2);
                jTable1.setValueAt(" ", 51, 2);
                jTable1.setValueAt(bundle.getString("FD_LED.jEffekte.TabConstraints.tabTitle") + " LED1+2", 52, 2);
                jTable1.setValueAt(bundle.getString("FD_LED.jEffekte.TabConstraints.tabTitle") + " LED3+4", 53, 2);
                jTable1.setValueAt(bundle.getString("FD_LED.jEffekte.TabConstraints.tabTitle") + " LED5+6", 54, 2);
                jTable1.setValueAt(bundle.getString("FD_LED.jEffekte.TabConstraints.tabTitle") + " LED7+8", 55, 2);
                jTable1.setValueAt(bundle.getString("FD_LED.jEffekte.TabConstraints.tabTitle") + " AUX1+2", 56, 2);
                jTable1.setValueAt(bundle.getString("FD_LED.jEffekte.TabConstraints.tabTitle") + " AUX3", 57, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " LED1+2", 58, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " LED3+4", 59, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " LED5+6", 60, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " LED7+8", 61, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX1+2", 62, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX3", 63, 2);
                for (int i = 64; i < 111; i++) {
                    jTable1.setValueAt(" ", i, 2);
                }
                jTable1.setValueAt("F-Tasten für Dämmerungsschalter", 111, 2);
                jTable1.setValueAt("Empfindlichkeit Dämmerungsschalter", 112, 2);
                jTable1.setValueAt("Konfigurationsdaten 2", 114, 2);
                jTable1.setValueAt(" ", 115, 2);
                jTable1.setValueAt(" ", 116, 2);
                jTable1.setValueAt("F-Tasten für Orientierungslicht", 117, 2);
                jTable1.setValueAt("Empfindlichkeit Orientierungslicht", 118, 2);
                jTable1.setValueAt(" ", 119, 2);
                jTable1.setValueAt("F-Tasten für AUX1", 120, 2);
                jTable1.setValueAt("F-Tasten für AUX2", 121, 2);
                jTable1.setValueAt("F-Tasten für AUX3", 122, 2);
                jTable1.setValueAt(bundle.getString("Kickzeit") + " AUX1+3", 123, 2);
                jTable1.setValueAt("defekte Leuchtstoffröhre", 124, 2);
                jTable1.setValueAt("Einschaltzeit Leuchtstoffröhre 1+2", 125, 2);
                jTable1.setValueAt("Einschaltzeit Leuchtstoffröhre 3+4", 126, 2);
                jTable1.setValueAt("Einschaltzeit Leuchtstoffröhre 5+6", 127, 2);
                jTable1.setValueAt("Einschaltzeit Leuchtstoffröhre 7+8", 128, 2);
                jTable1.setValueAt(bundle.getString("Default"), 129, 2);
                for (int i = 130; i < CV[0].length; i++) {
                    jTable1.setValueAt(" ", i, 2);
                }
                break;

            case c.LD_G31Plus:
            case c.LD_G33Plus:
            case c.LD_G34Plus:
                jTable1.setValueAt("Funktion Mapping SOUND F1", 147, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F2", 148, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F3", 149, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F4", 150, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F5", 151, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F6", 152, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F7", 153, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F8", 154, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F9", 155, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F10", 156, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F11", 157, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F12", 158, 2);
            case c.LD_G36Plus:
                jTable1.setValueAt(bundle.getString("Hilfsregiter") + " CV-Nummern", 25, 2);
                jTable1.setValueAt(bundle.getString("Hilfsregiter") + bundle.getString("Wert"), 29, 2);
                jTable1.setValueAt(bundle.getString("Ueberspannung"), 198, 2);
                jTable1.setValueAt(" ", 47, 2);
                jTable1.setValueAt("Motor trimm 1", 164, 2);
                jTable1.setValueAt("Motor trimm 2", 165, 2);
                jTable1.setValueAt(bundle.getString("ZuordnungZuF") + " 13", 179, 2);
                jTable1.setValueAt(bundle.getString("ZuordnungZuF") + " 14", 180, 2);
                jTable1.setValueAt(bundle.getString("ZuordnungZuF") + " 15", 181, 2);
                jTable1.setValueAt(bundle.getString("ZuordnungZuF") + " 16", 182, 2);
                jTable1.setValueAt(bundle.getString("ZuordnungZuF") + " 17", 183, 2);
                jTable1.setValueAt(bundle.getString("ZuordnungZuF") + " 18", 184, 2);
                jTable1.setValueAt(bundle.getString("ZuordnungZuF") + " 19", 185, 2);
                jTable1.setValueAt(bundle.getString("ZuordnungZuF") + " 20", 186, 2);
                jTable1.setValueAt(bundle.getString("ZuordnungZuF") + " 21", 187, 2);
                jTable1.setValueAt(bundle.getString("ZuordnungZuF") + " 22", 188, 2);
                jTable1.setValueAt(bundle.getString("ZuordnungZuF") + " 23", 189, 2);
                jTable1.setValueAt(bundle.getString("ZuordnungZuF") + " 24", 190, 2);
                jTable1.setValueAt(bundle.getString("ZuordnungZuF") + " 25", 191, 2);
                jTable1.setValueAt(bundle.getString("ZuordnungZuF") + " 26", 192, 2);
                jTable1.setValueAt(bundle.getString("ZuordnungZuF") + " 27", 193, 2);
                jTable1.setValueAt(bundle.getString("ZuordnungZuF") + " 28", 194, 2);
                jTable1.setValueAt("Effekte F0v", 52, 2);
                jTable1.setValueAt("Effekte F0r", 53, 2);
                jTable1.setValueAt("Effekte AUX1", 54, 2);
                jTable1.setValueAt("Effekte AUX2", 55, 2);
                jTable1.setValueAt("Effekte AUX3", 56, 2);
                jTable1.setValueAt("Effekte AUX4", 57, 2);
                jTable1.setValueAt("Effekte AUX5", 58, 2);
                jTable1.setValueAt("Effekte AUX6", 59, 2);
                jTable1.setValueAt(bundle.getString("LDG30erPlus.jLabel40.text") + " f0v", 103, 2);
                jTable1.setValueAt(bundle.getString("LDG30erPlus.jLabel40.text") + " f0r", 104, 2);
                jTable1.setValueAt(bundle.getString("LDG30erPlus.jLabel40.text") + " AUX1", 105, 2);
                jTable1.setValueAt(bundle.getString("LDG30erPlus.jLabel40.text") + " AUX2", 106, 2);
                jTable1.setValueAt(bundle.getString("LDG30erPlus.jLabel40.text") + " AUX3", 107, 2);
                jTable1.setValueAt(bundle.getString("LDG30erPlus.jLabel40.text") + " AUX4", 108, 2);
                jTable1.setValueAt(bundle.getString("LDG30erPlus.jLabel40.text") + " AUX5", 109, 2);
                jTable1.setValueAt(bundle.getString("LDG30erPlus.jLabel40.text") + " AUX6", 110, 2);
                jTable1.setValueAt(bundle.getString("LDG30erPlus.jLabel40.text") + " MARs", 111, 2);
                jTable1.setValueAt(bundle.getString("FDR.jLabelOT1.text") + " blink f0v", 131, 2);
                jTable1.setValueAt(bundle.getString("FDR.jLabelOT1.text") + " blink f0r", 132, 2);
                jTable1.setValueAt(bundle.getString("FDR.jLabelOT1.text") + " blink AUX1", 133, 2);
                jTable1.setValueAt(bundle.getString("FDR.jLabelOT1.text") + " blink AUX2", 134, 2);
                jTable1.setValueAt(bundle.getString("FDR.jLabelOT1.text") + " blink AUX3", 135, 2);
                jTable1.setValueAt(bundle.getString("FDR.jLabelOT1.text") + " blink AUX4", 136, 2);
                jTable1.setValueAt(bundle.getString("FDR.jLabelOT1.text") + " blink AUX5", 137, 2);
                jTable1.setValueAt(bundle.getString("FDR.jLabelOT1.text") + " blink AUX6", 138, 2);
                jTable1.setValueAt(bundle.getString("PauseZwischenBlinken") + " f0v", 139, 2);
                jTable1.setValueAt(bundle.getString("PauseZwischenBlinken") + " f0r", 140, 2);
                jTable1.setValueAt(bundle.getString("PauseZwischenBlinken") + " AUX1", 141, 2);
                jTable1.setValueAt(bundle.getString("PauseZwischenBlinken") + " AUX2", 142, 2);
                jTable1.setValueAt(bundle.getString("PauseZwischenBlinken") + " AUX3", 143, 2);
                jTable1.setValueAt(bundle.getString("PauseZwischenBlinken") + " AUX4", 144, 2);
                jTable1.setValueAt(bundle.getString("PauseZwischenBlinken") + " AUX5", 145, 2);
                jTable1.setValueAt(bundle.getString("PauseZwischenBlinken") + " AUX6", 146, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " f0v", 114, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " f0r", 115, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX1", 116, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX2", 117, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX3", 118, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX4", 119, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX5", 120, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX6", 121, 2);
                jTable1.setValueAt(bundle.getString("FD_R_Extended.jLabel76.text"), 113, 2);
                jTable1.setValueAt(bundle.getString("alternativ") + bundle.getString("Dimmen") + " f0v", 122, 2);
                jTable1.setValueAt(bundle.getString("alternativ") + bundle.getString("Dimmen") + " f0r", 123, 2);
                jTable1.setValueAt(bundle.getString("alternativ") + bundle.getString("Dimmen") + " AUX1", 124, 2);
                jTable1.setValueAt(bundle.getString("alternativ") + bundle.getString("Dimmen") + " AUX2", 125, 2);
                jTable1.setValueAt(bundle.getString("alternativ") + bundle.getString("Dimmen") + " AUX3", 126, 2);
                jTable1.setValueAt(bundle.getString("alternativ") + bundle.getString("Dimmen") + " AUX4", 127, 2);
                jTable1.setValueAt(bundle.getString("alternativ") + bundle.getString("Dimmen") + " AUX5", 128, 2);
                jTable1.setValueAt(bundle.getString("alternativ") + bundle.getString("Dimmen") + " AUX6", 129, 2);
                jTable1.setValueAt(bundle.getString("FD_R_Extended.jLabel78.text"), 130, 2);
                jTable1.setValueAt(bundle.getString("FD_R_Extended.jLabel39.text"), 159, 2);
                jTable1.setValueAt(bundle.getString("alternativ") + bundle.getString("MotorSpannung") + " Kick function", 160, 2);
                jTable1.setValueAt(bundle.getString("alternativ") + bundle.getString("Kickzeit") + " v", 161, 2);
                jTable1.setValueAt(bundle.getString("alternativ") + bundle.getString("Kickzeit") + " r", 162, 2);
                jTable1.setValueAt(bundle.getString("Zuordnung") + " input 1 to AUX", 60, 2);
                jTable1.setValueAt(bundle.getString("Zuordnung") + " input 2 to AUX", 61, 2);
                jTable1.setValueAt(bundle.getString("Zuordnung") + " input 1 to function", 62, 2);
                jTable1.setValueAt(bundle.getString("Zuordnung") + " input 2 to function", 63, 2);
                jTable1.setValueAt(bundle.getString("Mindesteinschaltdauer") + " " + bundle.getString("Eingang") + " 1", 176, 2);
                jTable1.setValueAt(bundle.getString("Mindesteinschaltdauer") + " " + bundle.getString("Eingang") + " 2", 177, 2);
                jTable1.setValueAt(bundle.getString("FbisF") + bundle.getString("Servoausgang"), 166, 2);
                jTable1.setValueAt(bundle.getString("Servoausgang") + " " + bundle.getString("ein"), 167, 2);
                jTable1.setValueAt(bundle.getString("linkerAnschlag") + " Servo", 168, 2);
                jTable1.setValueAt(bundle.getString("rechterAnschlag") + " Servo", 169, 2);
                jTable1.setValueAt(bundle.getString("Geschw") + " Servo", 170, 2);
                jTable1.setValueAt(bundle.getString("letztePos") + " Servo", 171, 2);
                jTable1.setValueAt("Time out " + bundle.getString("LDG30erPlus.jLabel208.text"), 95, 2);
                jTable1.setValueAt("Function F1 - F4 " + bundle.getString("LDG30erPlus.jLabel208.text") + "Input 1", 96, 2);
                jTable1.setValueAt("Function F1 - F4 " + bundle.getString("LDG30erPlus.jLabel208.text") + "Input 2", 98, 2);
                jTable1.setValueAt("Function F5 - F12 " + bundle.getString("LDG30erPlus.jLabel208.text") + "Input 1", 97, 2);
                jTable1.setValueAt("Function F5 - F12 " + bundle.getString("LDG30erPlus.jLabel208.text") + "Input 2", 99, 2);
                jTable1.setValueAt(bundle.getString("MotorSpannung") + " " + bundle.getString("LDG30erPlus.jLabel208.text"), 100, 2);
                jTable1.setValueAt(bundle.getString("Pendelautomatik") + "Input 1", 195, 2);
                jTable1.setValueAt(bundle.getString("Pendelautomatik") + "Input 2", 196, 2);
                jTable1.setValueAt(bundle.getString("Pendelautomatik") + " " + bundle.getString("LDG30erPlus.jLabel192.text"), 197, 2);
                jTable1.setValueAt("Ignore Impulse", 178, 2);
                jTable1.setValueAt(bundle.getString("Ausschalten") + " F0" + bundle.getString("beiFS0"), 172, 2);
                jTable1.setValueAt(bundle.getString("Einschalten") + " AUX" + bundle.getString("beiFS0"), 173, 2);
                jTable1.setValueAt(bundle.getString("Ausschalten") + " AUX" + bundle.getString("beiFS0"), 174, 2);
                jTable1.setValueAt(bundle.getString("Invertieren") + " AUX" + bundle.getString("beiFS0"), 175, 2);
                for (int i = 195; i < CV[0].length; i++) {
                    jTable1.setValueAt(" ", i, 2);
                }
                break;

            case c.LD_G41:
            case c.LD_G42:
            case c.LD_W42:
            case c.LD_G42_2:
            case c.LD_W42_2:
            case c.LD_G43:
            case c.LD_G44:

                jTable1.setValueAt(bundle.getString("RailCom_Statistik"), 9, 2);
                jTable1.setValueAt(bundle.getString("Betriebsarten"), 11, 2);
                jTable1.setValueAt("", 19, 2);
                jTable1.setValueAt("", 22, 2);
                jTable1.setValueAt("", 23, 2);
                jTable1.setValueAt("", 24, 2);
                jTable1.setValueAt("", 25, 2);
                if (Decoder == c.LD_G42 || Decoder == c.LD_W42) {
                    jTable1.setValueAt(bundle.getString("RailCom_Kanal"), 27, 2);
                } else {
                    jTable1.setValueAt(bundle.getString("RailCom_Einstellungen"), 27, 2);
                }
                jTable1.setValueAt("", 32, 2);
                jTable1.setValueAt("", 33, 2);
                jTable1.setValueAt("", 34, 2);
                jTable1.setValueAt("", 35, 2);
                jTable1.setValueAt("", 36, 2);
                jTable1.setValueAt("", 37, 2);
                jTable1.setValueAt("", 38, 2);
                jTable1.setValueAt("", 39, 2);
                jTable1.setValueAt("", 40, 2);
                jTable1.setValueAt("", 41, 2);
                jTable1.setValueAt("", 42, 2);
                jTable1.setValueAt("", 43, 2);
                jTable1.setValueAt("", 44, 2);
                jTable1.setValueAt("", 45, 2);

                jTable1.setValueAt(bundle.getString("Dimmen_F0f"), 46, 2);
                jTable1.setValueAt(bundle.getString("Dimmen_F0r"), 47, 2);
                if (Decoder != c.LD_G42 && Decoder != c.LD_W42) {
                    jTable1.setValueAt(bundle.getString("Dimmen_AUX1"), 48, 2);
                    jTable1.setValueAt(bundle.getString("Dimmen_AUX2"), 49, 2);
                } else {
                    jTable1.setValueAt("", 48, 2);
                    jTable1.setValueAt("", 49, 2);
                }
                if (Decoder == c.LD_G43 || Decoder == c.LD_G44) {
                    jTable1.setValueAt(bundle.getString("Dimmen_AUX3"), 50, 2);
                    jTable1.setValueAt(bundle.getString("Dimmen_AUX4"), 51, 2);
                    jTable1.setValueAt(bundle.getString("Dimmen_AUX5"), 52, 2);
                    jTable1.setValueAt(bundle.getString("Dimmen_AUX6"), 53, 2);
                } else {
                    jTable1.setValueAt("", 50, 2);
                    jTable1.setValueAt("", 51, 2);
                    jTable1.setValueAt("", 52, 2);
                    jTable1.setValueAt("", 53, 2);
                }
                if (Decoder == c.LD_G42 || Decoder == c.LD_W42) {
                    jTable1.setValueAt("", 54, 2);
                    jTable1.setValueAt("", 55, 2);
                    jTable1.setValueAt(bundle.getString("Effekt_F0f"), 56, 2);
                    jTable1.setValueAt(bundle.getString("Effekt_F0r"), 57, 2);
                    jTable1.setValueAt(bundle.getString("Effekt_AUX1"), 58, 2);
                    jTable1.setValueAt(bundle.getString("Effekt_AUX2"), 59, 2);
                } else {
                    jTable1.setValueAt(bundle.getString("Effekt_F0f"), 54, 2);
                    jTable1.setValueAt(bundle.getString("Effekt_F0r"), 55, 2);
                    jTable1.setValueAt(bundle.getString("Effekt_AUX1"), 56, 2);
                    jTable1.setValueAt(bundle.getString("Effekt_AUX2"), 57, 2);
                    if (Decoder != c.LD_G42_2 && Decoder != c.LD_W42_2) {
                        jTable1.setValueAt(bundle.getString("Effekt_AUX3"), 58, 2);
                        jTable1.setValueAt(bundle.getString("Effekt_AUX4"), 59, 2);
                    } else {
                        jTable1.setValueAt("", 58, 2);
                        jTable1.setValueAt("", 59, 2);
                    }
                }
                if (Decoder == c.LD_G41) {
                    jTable1.setValueAt(bundle.getString("Effekt_AUX5"), 60, 2);
                    jTable1.setValueAt(bundle.getString("Effekt_AUX6"), 61, 2);
                    jTable1.setValueAt(bundle.getString("Fahrstufe_Ausgang_aus"), 62, 2);
                    jTable1.setValueAt("", 63, 2);
                    jTable1.setValueAt(bundle.getString("Anfahrkick"), 64, 2);
                }
                if (Decoder == c.LD_G42 || Decoder == c.LD_W42) {
                    jTable1.setValueAt("", 60, 2);
                    jTable1.setValueAt(bundle.getString("Funktionen_Schalteingang"), 61, 2);
                    jTable1.setValueAt(bundle.getString("Ueberlast_Dauer"), 62, 2);
                    jTable1.setValueAt(bundle.getString("Ueberlast_Groesse"), 63, 2);
                    jTable1.setValueAt(bundle.getString("Richtungswechsel_Analog"), 64, 2);
                }
                if (Decoder == c.LD_G42_2 || Decoder == c.LD_W42_2) {
                    jTable1.setValueAt("", 60, 2);
                    jTable1.setValueAt("", 61, 2);
                    jTable1.setValueAt(bundle.getString("Fahrstufe_Ausgang_aus"), 62, 2);
                    jTable1.setValueAt("", 63, 2);
                    jTable1.setValueAt(bundle.getString("Anfahrkick"), 64, 2);
                }
                if (Decoder == c.LD_G43 || Decoder == c.LD_G44) {
                    jTable1.setValueAt(bundle.getString("Effekt_AUX5"), 60, 2);
                    jTable1.setValueAt(bundle.getString("Effekt_AUX6"), 61, 2);
                    jTable1.setValueAt(bundle.getString("Fahrstufe_Ausgang_aus"), 62, 2);
                    jTable1.setValueAt(bundle.getString("Empfindlichkeit_Umschaltpuls"), 63, 2);
                    jTable1.setValueAt(bundle.getString("Anfahrkick"), 64, 2);
                }

                jTable1.setValueAt("", 65, 2);

                jTable1.setValueAt(bundle.getString("Funktionszuordnung"), 95, 2);
                if (Decoder == c.LD_G41) {
                    jTable1.setValueAt("", 96, 2);
                } else {
                    jTable1.setValueAt(bundle.getString("Dauer_Schalteingang_1"), 96, 2);
                }
                if(Decoder == c.LD_G43 || Decoder == c.LD_G44){
                    jTable1.setValueAt(bundle.getString("Dauer_Schalteingang_2"), 97, 2);
                }
                else 
                {   
                    jTable1.setValueAt("", 97, 2);                   
                }
 
                jTable1.setValueAt(bundle.getString("Kickzeit"), 98, 2);
                if ( Decoder!= c.LD_G42 && Decoder != c.LD_W42){
                      jTable1.setValueAt(bundle.getString("Dimmzeit"), 99, 2);   
                }
                else
                {
                    jTable1.setValueAt("", 99, 2);
                }
                
                if ( Decoder == c.LD_G42 || Decoder == c.LD_W42){
                    jTable1.setValueAt(bundle.getString("Frequenz_F0f"), 100, 2);
                    jTable1.setValueAt(bundle.getString("Frequenz_F0r"), 101, 2);
                    jTable1.setValueAt(bundle.getString("Frequenz_AUX1"), 102, 2);
                    jTable1.setValueAt(bundle.getString("Frequenz_AUX2"), 103, 2);
                }
                else
                {
                    jTable1.setValueAt(bundle.getString("Frequenz_F0f/F0r"), 100, 2);
                    jTable1.setValueAt(bundle.getString("Frequenz_AUX1/2"), 101, 2);
                    if(Decoder != c.LD_G42_2 && Decoder != c.LD_W42_2){
                        jTable1.setValueAt(bundle.getString("Frequenz_AUX3/4"), 102, 2);
                        jTable1.setValueAt(bundle.getString("Frequenz_AUX5/6"), 103, 2);  
                    }
                    else
                    {
                        jTable1.setValueAt("", 102, 2);
                        jTable1.setValueAt("", 103, 2);
                    }
                }
                if (Decoder == c.LD_G43 || Decoder == c.LD_G44){
                    jTable1.setValueAt(bundle.getString("FMEingang1_1"), 104, 2);
                    jTable1.setValueAt(bundle.getString("FMEingang1_2"), 105, 2);
                    jTable1.setValueAt(bundle.getString("FMEingang2_1"), 106, 2);
                    jTable1.setValueAt(bundle.getString("FMEingang2_2"), 106, 2);       
                }
                else
                { 
                    jTable1.setValueAt("", 104, 2);
                    jTable1.setValueAt("", 105, 2);
                    jTable1.setValueAt("", 106, 2);
                    jTable1.setValueAt("", 107, 2);
                }
                if(Decoder != c.LD_G42 && Decoder != c.LD_W42){
                    jTable1.setValueAt(bundle.getString("Schwelle_Ueberlast"), 108, 2);
                    jTable1.setValueAt(bundle.getString("Fahrstufe_Walzer"), 109, 2);
                    jTable1.setValueAt(bundle.getString("Austastintervall"), 110, 2);    
                }
                else
                {
                    jTable1.setValueAt("", 108, 2);
                    jTable1.setValueAt("", 109, 2);
                    jTable1.setValueAt("", 110, 2);
                }
                jTable1.setValueAt(bundle.getString("Verstaerkung"), 111, 2);
                jTable1.setValueAt(bundle.getString("Lastregelung_KP"), 112, 2);
                jTable1.setValueAt(bundle.getString("Lastregelung_KI"), 113, 2);
                jTable1.setValueAt(bundle.getString("Lastregelung_KD"), 114, 2);
                jTable1.setValueAt(bundle.getString("Lastregelung_An"), 115, 2);
                if (Decoder== c.LD_G43 || Decoder == c.LD_G44){
                    jTable1.setValueAt(bundle.getString("Letzte_Richtung_Analog"), 116, 2);
                    jTable1.setValueAt(bundle.getString("Ueberlast_Dauer"), 117, 2);                  
                }
                else
                {
                    jTable1.setValueAt("", 116, 2);
                    jTable1.setValueAt("", 117, 2);
                }
                if(Decoder == c.LD_G41){
                       jTable1.setValueAt(bundle.getString("Ueberlast_Dauer"), 118, 2);                  
                }           
                else
                {
                    jTable1.setValueAt("", 118, 2);
                }
                jTable1.setValueAt("", 119, 2);               
                if(Decoder != c.LD_G42 && Decoder != c.LD_W42){
                    jTable1.setValueAt(bundle.getString("Konfigurationsdaten_2"), 120, 2);
                    jTable1.setValueAt(bundle.getString("ABC_Empfindlichkeit"), 121, 2);
                    jTable1.setValueAt(bundle.getString("CID_MSB"), 122, 2);
                    jTable1.setValueAt(bundle.getString("CID_LSB"), 123, 2);
                    jTable1.setValueAt(bundle.getString("Session_ID"), 124, 2);
                    jTable1.setValueAt(bundle.getString("DCC_A_MSB"), 125, 2);
                    jTable1.setValueAt(bundle.getString("DCC_A_LSB"), 126, 2);
                }
 
                for (int i = 0; i < 29; i++) {
                    int j = 256 + i * 8;
                    String num = Integer.toString(i);
                    jTable1.setValueAt(bundle.getString("Ausgaenge_Bitweise") + " F" + num + " f", j, 2);
                    jTable1.setValueAt(bundle.getString("Nicht_Belegt") + " F" + num + " f", j + 1, 2);
                    jTable1.setValueAt(bundle.getString("Sonderfunktionen") + " F" + num + " f", j + 2, 2);
                    jTable1.setValueAt(bundle.getString("aus/ein_mit_Funktion") + " F" + num + " f", j + 3, 2);
                    jTable1.setValueAt(bundle.getString("Ausgaenge_Bitweise") + " F" + num + " r", j + 4, 2);
                    jTable1.setValueAt(bundle.getString("Nicht_Belegt") + " F" + num + " r", j + 5, 2);
                    jTable1.setValueAt(bundle.getString("Sonderfunktionen") + " F" + num + " r", j + 6, 2);
                    jTable1.setValueAt(bundle.getString("aus/ein_mit_Funktion") + " F" + num + " r", j + 7, 2);
                }
                for (int i = 488; i < CV[0].length; i++) {
                    jTable1.setValueAt(" ", i, 2);
                }

                break;

            case c.FD_R_ex: //FD-R extended
                jTable1.setValueAt(bundle.getString("FDR.jLabelMM_Addr_2.text"), 46, 2);
                jTable1.setValueAt(bundle.getString("overload"), 47, 2);
                jTable1.setValueAt("Konfigurations Variable 2", 46, 2);
                jTable1.setValueAt(bundle.getString("Hilfsregiter") + " CV-Nummern", 49, 2);
                jTable1.setValueAt(bundle.getString("Hilfsregiter") + bundle.getString("Wert"), 50, 2);
                jTable1.setValueAt(" ", 51, 2);
                jTable1.setValueAt(bundle.getString("FD_LED.jEffekte.TabConstraints.tabTitle") + " AUX1", 52, 2);
                jTable1.setValueAt(bundle.getString("FD_LED.jEffekte.TabConstraints.tabTitle") + " AUX2", 53, 2);
                jTable1.setValueAt(bundle.getString("FD_LED.jEffekte.TabConstraints.tabTitle") + " AUX3", 54, 2);
                jTable1.setValueAt(bundle.getString("FD_LED.jEffekte.TabConstraints.tabTitle") + " AUX4", 55, 2);
                jTable1.setValueAt(bundle.getString("FD_LED.jEffekte.TabConstraints.tabTitle") + " AUX5", 56, 2);
                jTable1.setValueAt(bundle.getString("FD_LED.jEffekte.TabConstraints.tabTitle") + " AUX6", 57, 2);
                jTable1.setValueAt("Funktion Mapping " + bundle.getString("Eingang") + " 1 " + bundle.getString("Ausgaenge"), 58, 2);
                jTable1.setValueAt("Funktion Mapping " + bundle.getString("Eingang") + " 1 (Sounds + Servo)", 59, 2);
                jTable1.setValueAt("Funktion Mapping " + bundle.getString("Eingang") + " 2 " + bundle.getString("Ausgaenge"), 60, 2);
                jTable1.setValueAt("Funktion Mapping " + bundle.getString("Eingang") + " 2 (Sounds + Servo)", 61, 2);
                jTable1.setValueAt("Funktion Mapping " + bundle.getString("Eingang") + " 3 " + bundle.getString("Ausgaenge"), 62, 2);
                jTable1.setValueAt("Funktion Mapping " + bundle.getString("Eingang") + " 3 (Sounds)", 63, 2);
                jTable1.setValueAt(" ", 64, 2);
                jTable1.setValueAt(" ", 65, 2);
                jTable1.setValueAt(" ", 94, 2);
                jTable1.setValueAt(" ", 95, 2);
                jTable1.setValueAt(" ", 96, 2);
                jTable1.setValueAt(" ", 97, 2);
                jTable1.setValueAt(" ", 98, 2);
                jTable1.setValueAt(" ", 99, 2);
                jTable1.setValueAt(" ", 100, 2);
                jTable1.setValueAt(" ", 101, 2);
                jTable1.setValueAt(" ", 102, 2);
                jTable1.setValueAt(" ", 103, 2);
                jTable1.setValueAt(" ", 104, 2);
                jTable1.setValueAt(bundle.getString("FDR.jLabelBlinkFrequenz.text") + " AUX1", 115, 2);
                jTable1.setValueAt(bundle.getString("FDR.jLabelBlinkFrequenz.text") + " AUX2", 116, 2);
                jTable1.setValueAt(bundle.getString("FDR.jLabelBlinkFrequenz.text") + " AUX3", 117, 2);
                jTable1.setValueAt(bundle.getString("FDR.jLabelBlinkFrequenz.text") + " AUX4", 118, 2);
                jTable1.setValueAt(bundle.getString("FDR.jLabelBlinkFrequenz.text") + " AUX5", 109, 2);
                jTable1.setValueAt(bundle.getString("FDR.jLabelBlinkFrequenz.text") + " AUX6", 110, 2);
                jTable1.setValueAt(bundle.getString("FDR.jLabelBlinkFrequenz.text") + " MARs", 111, 2);
                jTable1.setValueAt(bundle.getString("speedAltDim"), 112, 2);
                jTable1.setValueAt(bundle.getString("OutAltDim"), 113, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX1", 114, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX2", 115, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX3", 116, 2);
                jTable1.setValueAt(bundle.getString("Dimmen") + " AUX4", 117, 2);
                jTable1.setValueAt(bundle.getString("Mindesteinschaltdauer") + " " + bundle.getString("Eingang") + " 1", 118, 2);
                jTable1.setValueAt(bundle.getString("Mindesteinschaltdauer") + " " + bundle.getString("Eingang") + " 2", 119, 2);
                jTable1.setValueAt(bundle.getString("Mindesteinschaltdauer") + " " + bundle.getString("Eingang") + " 3", 120, 2);
                jTable1.setValueAt("", 121, 2);
                jTable1.setValueAt(bundle.getString("alternativ") + bundle.getString("Dimmen") + " AUX1", 122, 2);
                jTable1.setValueAt(bundle.getString("alternativ") + bundle.getString("Dimmen") + " AUX2", 123, 2);
                jTable1.setValueAt(bundle.getString("alternativ") + bundle.getString("Dimmen") + " AUX3", 124, 2);
                jTable1.setValueAt(bundle.getString("alternativ") + bundle.getString("Dimmen") + " AUX4", 125, 2);
                jTable1.setValueAt("", 126, 2);
                jTable1.setValueAt("", 127, 2);
                jTable1.setValueAt("", 128, 2);
                jTable1.setValueAt("", 129, 2);
                jTable1.setValueAt(bundle.getString("FDR.jLabel29.text"), 130, 2);
                jTable1.setValueAt(bundle.getString("Blinken") + " -> ON-Time AUX1", 131, 2);
                jTable1.setValueAt(bundle.getString("Blinken") + " -> ON-Time AUX2", 132, 2);
                jTable1.setValueAt(bundle.getString("Blinken") + " -> ON-Time AUX3", 133, 2);
                jTable1.setValueAt(bundle.getString("Blinken") + " -> ON-Time AUX4", 134, 2);
                jTable1.setValueAt(bundle.getString("Blinken") + " -> ON-Time AUX5", 135, 2);
                jTable1.setValueAt(bundle.getString("Blinken") + " -> ON-Time AUX6", 136, 2);
                jTable1.setValueAt("", 137, 2);
                jTable1.setValueAt("", 138, 2);
                jTable1.setValueAt(bundle.getString("Doppel-Blinken") + " -> Pause AUX1", 139, 2);
                jTable1.setValueAt(bundle.getString("Doppel-Blinken") + " -> Pause AUX2", 140, 2);
                jTable1.setValueAt(bundle.getString("Doppel-Blinken") + " -> Pause AUX3", 141, 2);
                jTable1.setValueAt(bundle.getString("Doppel-Blinken") + " -> Pause AUX4", 142, 2);
                jTable1.setValueAt(bundle.getString("Doppel-Blinken") + " -> Pause AUX5", 143, 2);
                jTable1.setValueAt(bundle.getString("Doppel-Blinken") + " -> Pause AUX6", 144, 2);
                jTable1.setValueAt("", 145, 2);
                jTable1.setValueAt("", 146, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F1/F13", 147, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F2/F14", 148, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F3/F15", 149, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F4/F16", 150, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F5/F17", 151, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F6/F18", 152, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F7/F19", 153, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F8/F20", 154, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F9/F21", 155, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F10/F22", 156, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F11/F23", 157, 2);
                jTable1.setValueAt("Funktion Mapping SOUND F12/F24", 158, 2);
                jTable1.setValueAt(bundle.getString("Laut"), 159, 2);
                jTable1.setValueAt("", 160, 2);
                jTable1.setValueAt(bundle.getString("Kickzeit") + " " + bundle.getString("DecTest.jVor.text"), 161, 2);
                jTable1.setValueAt(bundle.getString("Kickzeit") + " " + bundle.getString("DecTest.jRueck.text"), 162, 2);
                jTable1.setValueAt("", 163, 2);
                jTable1.setValueAt("", 164, 2);
                jTable1.setValueAt("", 165, 2);
                jTable1.setValueAt(bundle.getString("FbisF") + bundle.getString("Servoausgang"), 166, 2);
                jTable1.setValueAt(bundle.getString("Servoausgang") + " " + bundle.getString("ein"), 167, 2);
                jTable1.setValueAt(bundle.getString("linkerAnschlag") + " Servo", 168, 2);
                jTable1.setValueAt(bundle.getString("rechterAnschlag") + " Servo", 169, 2);
                jTable1.setValueAt(bundle.getString("Geschw") + " Servo", 170, 2);
                jTable1.setValueAt(bundle.getString("letztePos") + " Servo", 171, 2);
                jTable1.setValueAt(bundle.getString("Ausschalten") + " F0" + bundle.getString("beiFS0"), 172, 2);
                jTable1.setValueAt(bundle.getString("Einschalten") + " AUX" + bundle.getString("beiFS0"), 173, 2);
                jTable1.setValueAt(bundle.getString("Ausschalten") + " AUX" + bundle.getString("beiFS0"), 174, 2);
                jTable1.setValueAt(bundle.getString("Invertieren") + " AUX" + bundle.getString("beiFS0"), 175, 2);
                jTable1.setValueAt("", 176, 2);
                jTable1.setValueAt("", 177, 2);
                jTable1.setValueAt("", 178, 2);
                jTable1.setValueAt("Funktion mapping F13", 179, 2);
                jTable1.setValueAt("Funktion mapping F14", 180, 2);
                jTable1.setValueAt("Funktion mapping F15", 181, 2);
                jTable1.setValueAt("Funktion mapping F16", 182, 2);
                jTable1.setValueAt("Funktion mapping F17", 183, 2);
                jTable1.setValueAt("Funktion mapping F18", 184, 2);
                jTable1.setValueAt("Funktion mapping F19", 185, 2);
                jTable1.setValueAt("Funktion mapping F20", 186, 2);
                jTable1.setValueAt("Funktion mapping F21", 187, 2);
                jTable1.setValueAt("Funktion mapping F22", 188, 2);
                jTable1.setValueAt("Funktion mapping F23", 189, 2);
                jTable1.setValueAt("Funktion mapping F24", 190, 2);
                jTable1.setValueAt("Funktion mapping F25", 191, 2);
                jTable1.setValueAt("Funktion mapping F26", 192, 2);
                jTable1.setValueAt("Funktion mapping F27", 193, 2);
                jTable1.setValueAt("Funktion mapping F28", 194, 2);
                for (int i = 195; i < CV[0].length; i++) {
                    jTable1.setValueAt(" ", i, 2);
                }
                break;
        }
        if (bPrint) {
            jOK.setText(bundle.getString("Drucken"));
        }
        for (int i = 0; i < CV[0].length; i++) {
            CV_To_Edit_Old[i] = CV_To_Edit[i];
            jTable1.setValueAt(i + 1, i, 0);
            int cvVal = getValueForCV(i + 1);
            if (cvVal != -1) {
                jTable1.setValueAt(cvVal, i, 1);
            }
            if (CV_To_Edit[i] == 1) {
                jTable1.setValueAt(true, i, 3);
            } else {
                jTable1.setValueAt(false, i, 3);
            }
        }
    }//GEN-LAST:event_formWindowOpened

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAbbruch;
    private javax.swing.JButton jGruppe_1;
    private javax.swing.JButton jGruppe_2;
    private javax.swing.JButton jGruppe_an;
    private javax.swing.JButton jGruppe_aus;
    private javax.swing.JButton jOK;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
